2019-04-11 13.48.13 : FwWrappedException [ exceptionTime = 2019-04-11 13:48:13.848, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = getAllCategories, primaryKeyText = Request ID [dfe23bf6-1b2c-4e91-8329-2ffa8a538d69], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = -1274450307824011258, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = getAllCategories, cause = org.springframework.dao.InvalidDataAccessResourceUsageException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:261) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy238.findAll(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.getAllCategories(CategoryBO.java:23) :: gov.wisconsin.admin.controller.AdminController.getAllCategories(AdminController.java:48) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:575) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3951) :: com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1014) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 14.55.32 : FwWrappedException [ exceptionTime = 2019-04-11 14:55:32.476, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [f4d672aa-384d-43ab-9efd-1fd387f6e34d], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = -8215257283481796, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.orm.jpa.JpaSystemException, exceptionText = could not extract ResultSet; nested exception is org.hibernate.exception.GenericJDBCException: could not extract ResultSet, customMessage = could not extract ResultSet; nested exception is org.hibernate.exception.GenericJDBCException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; nested exception is org.hibernate.exception.GenericJDBCException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:333) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy238.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 14.57.27 : FwWrappedException [ exceptionTime = 2019-04-11 14:57:27.005, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [22085dd1-0b45-46c2-9d2f-9c57d05ec2bc], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = 8701316633401752609, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.InvalidDataAccessResourceUsageException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:261) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy238.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 14.59.58 : FwWrappedException [ exceptionTime = 2019-04-11 14:59:58.293, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [b135d8cc-b81a-49d3-bb1f-4557c0391b01], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = -4572822848409562057, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.DataIntegrityViolationException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:282) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3951) :: com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1014) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 15.07.13 : FwWrappedException [ exceptionTime = 2019-04-11 15:07:13.425, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [35854a63-84e9-484a-b867-8ab1c443340d], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = 2617096370829736047, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.DataIntegrityViolationException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:282) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpICLReadCallback.complete(HttpICLReadCallback.java:88) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 15.07.30 : FwWrappedException [ exceptionTime = 2019-04-11 15:07:30.045, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [b1498478-8079-4764-9a20-aec204ed5020], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = 1302510914332760119, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.transaction.TransactionSystemException, exceptionText = UOWManager transaction processing failed; nested exception is com.ibm.wsspi.uow.UOWException: javax.transaction.RollbackException, customMessage = UOWManager transaction processing failed; nested exception is com.ibm.wsspi.uow.UOWException: javax.transaction.RollbackException, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = UOWManager transaction processing failed; nested exception is com.ibm.wsspi.uow.UOWException: javax.transaction.RollbackException, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(WebSphereUowTransactionManager.java:297) :: org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299) :: org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 15.08.19 : FwWrappedException [ exceptionTime = 2019-04-11 15:08:19.51, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [2b2f08d5-b837-4b99-9bf2-09fb374a659f], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = 782643115991541322, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.DataIntegrityViolationException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:282) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 15.08.34 : FwWrappedException [ exceptionTime = 2019-04-11 15:08:34.108, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [b974da3b-4d0d-48b8-87e2-ccabdff87b7f], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = -8317917076165844200, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.DataIntegrityViolationException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:282) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
2019-04-11 15.08.43 : FwWrappedException [ exceptionTime = 2019-04-11 15:08:43.587, callingClassID = gov.wisconsin.admin.controller.AdminController, callingMethodID = createCategory, primaryKeyText = Request ID [47982213-9c65-4b70-a663-29f9e1be58e0], currentPageID = , previousPageID = MOBLE, statusCode = 500, inTransaction = false, ipAddress = 159.158.240.108, serverName = DHS00118103/159.158.240.108, exceptionID = -2584643433013915627, userID = , wamsLoginID = , fwException = FwException [ classID = gov.wisconsin.admin.business.CategoryBO, methodID = createOrUpdateCategory, cause = org.springframework.dao.DataIntegrityViolationException, exceptionText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, customMessage = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, statusCode = 500, exceptionType = Application, isLoggable = true, showFullExp = true, messageCode = , messageText = , serviceName = , serviceMethod = , parameterText = could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not extract ResultSet, serviceMessage = , serviceDescription = , stackTraceValue = Stack Trace: org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:282) :: org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) :: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) :: org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) :: org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) :: org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) :: org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) :: org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) :: com.sun.proxy.$Proxy160.save(Unknown Source) :: gov.wisconsin.admin.business.CategoryBO.createOrUpdateCategory(CategoryBO.java:33) :: gov.wisconsin.admin.controller.AdminController.createCategory(AdminController.java:66) :: sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) :: sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) :: sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) :: java.lang.reflect.Method.invoke(Method.java:508) :: org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) :: org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) :: org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) :: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) :: org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) :: org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) :: org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) :: org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) :: org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:595) :: org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) :: javax.servlet.http.HttpServlet.service(HttpServlet.java:668) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781) :: com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480) :: com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) :: org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: gov.wisconsin.framework.impl.FwRequestFilter.doFilter(FwRequestFilter.java:27) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) :: org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) :: org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) :: org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) :: org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) :: com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) :: com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) :: com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) :: com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87) :: com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:947) :: com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) :: com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) :: com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) :: com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) :: com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) :: com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) :: com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) :: com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) :: com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) :: com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) :: com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) :: com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) :: ]]
