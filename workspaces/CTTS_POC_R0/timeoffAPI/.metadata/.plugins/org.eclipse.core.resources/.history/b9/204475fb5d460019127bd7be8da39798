package gov.wisconsin.admin.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("admin")
public class AdminController extends FwAbstractController {
	
	@GetMapping(value = "", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<APIPayload> loadDashboard(HttpServletRequest httpRequest, HttpSession httpSession) {
		APIPayload apiRequest = new APIPayload();
		Map<String, Object> responseMap = null;
		String deviceLang = FwConstants.ENGLISH;
		String userId = FwConstants.EMPTY_STRING;
		
		try {
			Map<String, Object> requestMap = new HashMap<String, Object>();
			
			if (httpRequest.getHeader(FwConstants.USER_ID) != null) {
				userId = httpRequest.getHeader(FwConstants.USER_ID);
				requestMap.put(FwConstants.USER_ID, userId);
			}
			
			if (httpRequest.getHeader(FwConstants.PAYLOAD_HEADER_DEVICE_LANGUAGE) != null && httpRequest.getHeader(FwConstants.PAYLOAD_HEADER_DEVICE_LANGUAGE).equals(FwConstants.SPANISH)) {
				deviceLang = FwConstants.SPANISH;
			}
			
			requestMap.put(FwConstants.PAYLOAD_HEADER_DEVICE_LANGUAGE, deviceLang);
			
			if (httpRequest.getHeader(FwConstants.PAYLOAD_HEADER_WID) != null) {
				requestMap.put(FwConstants.LDAP_WID, httpRequest.getHeader(FwConstants.PAYLOAD_HEADER_WID));
			}
			
			EligibilityInformationBO eligInfoBo = applicationContext.getBean(EligibilityInformationBO.class);
			responseMap = eligInfoBo.loadDashboardForAccount(requestMap);
			
			responseMap.put(FwConstants.RETURN_URL, "/accounts/" + userId);
			
			apiRequest.setResponseMap(responseMap);
		} catch(FwException fe) {
			throw new FwWrappedException(this.getClass(), fe, apiRequest, httpRequest);
		}
		
		return ResponseEntity.status(200).body(apiRequest);
	}
}