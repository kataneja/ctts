<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsd="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xsl" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxslt="http://xml.apache.org/xslt">
    <xsl:output indent="no" method="xml"/>
    <xsl:strip-space elements="*"/>
    <xsl:param name="SOURCE_FILENAME"/>
    <xsl:variable name="lcletters">abcdefghijklmnopqrstuvwxyz</xsl:variable>
	<xsl:variable name="ucletters">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xsl:variable>
	<xsl:variable name="defaultHighdate"><xsl:value-of select="'9999-12-31'"/></xsl:variable>
    <xsl:template name='convertToUppercase'>
	    <xsl:param name='toConvert' />
	    <xsl:value-of select="translate($toConvert,$lcletters,$ucletters)" />
	</xsl:template>
    <xsl:template name='convertAccessIndToCwwInd'>
	    <xsl:param name='toConvert'/>
	    <xsl:choose>
	        <xsl:when test="$toConvert = '0'">
	            <xsl:value-of select="1"/>
	        </xsl:when>
	        <xsl:when test="$toConvert = '1'">
	            <xsl:value-of select="2"/>
	        </xsl:when>
	        <xsl:when test="$toConvert = '2'">
	            <xsl:value-of select="2"/>
	        </xsl:when>
            <xsl:otherwise> 
            	<xsl:value-of select="2"/>
            </xsl:otherwise>
	     </xsl:choose>
	</xsl:template>
    <xsl:template name='convertAccessSwitchToCwwInd'>
	    <xsl:param name='toConvert'/>
	    <xsl:choose>
	        <xsl:when test="$toConvert ='Y'">
	            <xsl:value-of select="1"/>
	        </xsl:when>
	        <xsl:when test="$toConvert ='N'">
	            <xsl:value-of select="0"/>
	        </xsl:when>
            <xsl:otherwise> 
            	<xsl:value-of select="2"/>
            </xsl:otherwise>
	     </xsl:choose>
	</xsl:template>
	<xsl:template name='getYYYYMM'>
	    <xsl:param name='date'/>
	    <xsl:choose>
	    	<xsl:when test="$date != '9999-12-31'">
		    	<xsl:value-of select="concat(substring($date,1,4),substring($date,6,2))" />
		    </xsl:when>	
	     <xsl:otherwise> 
            	<xsl:value-of select="'999912'"/>
          </xsl:otherwise>
	     </xsl:choose>
	</xsl:template>
	<xsl:template name='getNegative'>
	    <xsl:param name='amount'/>
		<xsl:value-of select="concat('-',$amount)" />
	</xsl:template>
	
	<!-- RMB CLA constants PCR 43100  -->
	<xsl:variable name="APP_CLA_REQ_IND">
		<xsl:choose>
			<xsl:when test="string(CLA_PGM_SW) and CLA_PGM_SW ='Y'">
				<xsl:value-of select="'Y'" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'N'" />
			</xsl:otherwise>
		</xsl:choose>	    
	</xsl:variable>
	
    <xsl:template match="/APPLICATION">
        <APPLICATION>           
            <APP_TYP>			
				<xsl:choose>
            	    <xsl:when test="string(EXT_APP_TYPE) and EXT_APP_TYPE='A'">
            	    	<xsl:value-of select="'B'"/>
            	    </xsl:when>
            	    <xsl:when test="string(EXT_APP_TYPE) and EXT_APP_TYPE='B'">
            	    	<xsl:value-of select="'S'"/>
            	    </xsl:when>
            	    <xsl:when test="string(EXT_APP_TYPE) and EXT_APP_TYPE='D'">
            	    	<xsl:value-of select="'D'"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>
			</APP_TYP>
			<xsl:variable name="IS_ADD_PRGM">
				<xsl:choose>
					<xsl:when test="string(EXT_APP_TYPE) and EXT_APP_TYPE='D'">
						<xsl:value-of select="1" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="0" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="IS_INDV_EBD">
				<xsl:choose>
					<xsl:when test="EBD_PGM_SW = 1">
						<xsl:value-of select="1" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="0" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
            <CASE_NUM>
                <xsl:value-of select="CASE_NUM"/>
            </CASE_NUM>
            <RMC_APP_NUM>
                <xsl:value-of select="' '"/>
            </RMC_APP_NUM>
            <CMPN_CASE_IND>
	            <xsl:value-of select="' '"/><!-- we need to determine this indicator from cares side -->
            </CMPN_CASE_IND>
            
            <!-- PCR 68383 -->
			<xsl:choose>
				<xsl:when test="$IS_ADD_PRGM=1 and string(LANG_CD)">
					<LANG_CD>
						<xsl:value-of select="LANG_CD" />
					</LANG_CD>
				</xsl:when>
				<xsl:otherwise>
					<LANG_CD>
						<xsl:value-of select="' '" />
					</LANG_CD>
				</xsl:otherwise>
			</xsl:choose>            
            <PRIM_PRSN_PIN_NUM>
	            <xsl:value-of select="'0'"/>
            </PRIM_PRSN_PIN_NUM>
            <RPT_EFF_RCV_DT>
            	<xsl:value-of select="'9999-12-31'"/>
            </RPT_EFF_RCV_DT>
            <RPT_PIN_NUM>
	            <xsl:value-of select="'0'"/>
            </RPT_PIN_NUM>
            <RPT_STAT_CD>
                <xsl:value-of select="'RC'"/>
            </RPT_STAT_CD>
            <RPT_TMS>
                <xsl:value-of select="' '"/><!-- JAVA - Default to current DB2 Timestamp -->
            </RPT_TMS>
            <NO_ACTN_RSN_CD>
                <xsl:value-of select="' '"/>
            </NO_ACTN_RSN_CD>
            <RPT_WRKR_ID>
                <xsl:value-of select="' '"/>
            </RPT_WRKR_ID>
            <CMPN_CASE_NUM>
                <xsl:value-of select="' '"/>
            </CMPN_CASE_NUM>
            
			<xsl:choose>
          	    <xsl:when test="$IS_ADD_PRGM=1">
	            	<SRC_APP_NUM>
		               <xsl:value-of select="APP_NUM"/>
		           </SRC_APP_NUM>
          	    </xsl:when>
      	        <xsl:otherwise>	            	
      	        	<SRC_RMC_APP_NUM>
		               <xsl:value-of select="APP_NUM"/>
		           </SRC_RMC_APP_NUM>
		        </xsl:otherwise>
		    </xsl:choose>

            <ECF_STAT_CD>
                <xsl:value-of select="ECF_STAT_CD"/>
            </ECF_STAT_CD>
            <SRC_SBMT_TMS>
	            <xsl:value-of select="SBMT_TMS"/>
            </SRC_SBMT_TMS>        
            <DUE_DT>
	            <xsl:value-of select="DUE_DT"/>
            </DUE_DT>
            <UPDATED_DT>
                <xsl:value-of select="UPDATED_DT"/><!-- RMC_RQST.UPDT_DT -->
            </UPDATED_DT>
            <UPDT_DT>
                <xsl:value-of select="UPDT_DT"/><!-- RMC_RQST.UPDT_DT -->
            </UPDT_DT>
            <!-- RMB CLA PCR 43100 -->
            <PGM_CD>
				<xsl:value-of select="'CLA'"/>
			</PGM_CD>                              
            <EI_CHG_SW>
                <xsl:choose>
            	    <xsl:when test="string(EMPL_STAT_IND) and EMPL_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(EMPL_STAT_IND)">
            	    	<xsl:value-of select="EMPL_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </EI_CHG_SW>
            <ADD_CHG_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(ADR_CHG_STAT_IND) and ADR_CHG_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(ADR_CHG_STAT_IND)">
            	    	<xsl:value-of select="ADR_CHG_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </ADD_CHG_STAT_SW>           
            <PRSN_ADD_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(PRSN_ADD_STAT_IND) and string(PRSN_MOVE_IND) and PRSN_MOVE_IND !='Y' and PRSN_ADD_STAT_IND != 'Y'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(PRSN_ADD_STAT_IND) and string(PRSN_MOVE_IND) and (PRSN_MOVE_IND='Y' or PRSN_ADD_STAT_IND = 'Y')">
            	    	<xsl:value-of select="'Y'"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </PRSN_ADD_STAT_SW>
            <PRSN_MOVE_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(PRSN_MOVE_STAT_IND) and PRSN_MOVE_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(PRSN_MOVE_STAT_IND)">
            	    	<xsl:value-of select="PRSN_MOVE_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </PRSN_MOVE_STAT_SW>
            <MRRG_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(MRRG_STAT_SW) and MRRG_STAT_SW='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(MRRG_STAT_SW)">
            	    	<xsl:value-of select="MRRG_STAT_SW"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </MRRG_STAT_SW>
            <DVRC_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(DVRC_STAT_SW) and DVRC_STAT_SW='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(DVRC_STAT_SW)">
            	    	<xsl:value-of select="DVRC_STAT_SW"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </DVRC_STAT_SW>
            <DABL_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(DABL_STAT_IND) and DABL_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(DABL_STAT_IND)">
            	    	<xsl:value-of select="DABL_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </DABL_STAT_SW>         
            <PREG_ADD_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(PREG_ADD_STAT_SW) and PREG_ADD_STAT_SW='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(PREG_ADD_STAT_SW)">
            	    	<xsl:value-of select="PREG_ADD_STAT_SW"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </PREG_ADD_STAT_SW>
            <PREG_CHG_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(PREG_CHG_STAT_IND) and PREG_CHG_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(PREG_CHG_STAT_IND)">
            	    	<xsl:value-of select="PREG_CHG_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </PREG_CHG_STAT_SW>
            <DTH_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(DTH_STAT_SW) and DTH_STAT_SW='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(DTH_STAT_SW)">
            	    	<xsl:value-of select="DTH_STAT_SW"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </DTH_STAT_SW>
            <CNTY_CHG_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(HSHL_ADDR_COUNTY_CHANGED)"><xsl:value-of select="HSHL_ADDR_COUNTY_CHANGED"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </CNTY_CHG_STAT_SW>
            <HMO_CHG_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(HMO_CHG_STAT_SW)"><xsl:value-of select="HMO_CHG_STAT_SW"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </HMO_CHG_STAT_SW>
            <CC_PGM_SW>               
 		    	<xsl:choose><!-- If INDV_CC_RQST_IND is 1 populate 'Y' else 'N'-->
				       <xsl:when test="CC_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                        
            </CC_PGM_SW>
			<xsl:variable name="APP_CC_RQST_SW"> 
			    <xsl:value-of select="CC_PGM_SW"/> 
			</xsl:variable>            
            <CTS_PGM_SW>                
 		    	<xsl:choose>
				       <xsl:when test="CTS_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                        
            </CTS_PGM_SW>
            <FPW_PGM_SW>
 		    	<xsl:choose>
				       <xsl:when test="FPW_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                        
            </FPW_PGM_SW>
            <FS_PGM_SW>
                <xsl:choose>
				       <xsl:when test="FS_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                       
            </FS_PGM_SW>
			<xsl:variable name="APP_FS_RQST_SW"> 
			    <xsl:value-of select="FS_PGM_SW"/> 
			</xsl:variable>            
            <FAM_MA_PGM_SW>
                <xsl:choose>
				       <xsl:when test="FAM_MA_PGM_SW = 1 or EBD_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                        
            </FAM_MA_PGM_SW>
            <MPA_PGM_SW>
               <xsl:choose>
				       <xsl:when test="MPA_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>                                         
            </MPA_PGM_SW>
            <OTHR_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(OTHR_STAT_SW)"><xsl:value-of select="OTHR_STAT_SW"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </OTHR_STAT_SW>
            <PRVD_CHG_SW>
                <xsl:choose>
            	    <xsl:when test="string(PRVD_CHG_SW)"><xsl:value-of select="PRVD_CHG_SW"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </PRVD_CHG_SW>
            <NOTE_ADD_SW>
                <xsl:choose>
            	    <xsl:when test="string(NOTE_ADD_SW)"><xsl:value-of select="NOTE_ADD_SW"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </NOTE_ADD_SW>
            <KC_FC_ST_GARD_SW>
                <xsl:choose>
            	    <xsl:when test="string(KC_FC_ST_GARD_SW)"><xsl:value-of select="KC_FC_ST_GARD_SW"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </KC_FC_ST_GARD_SW>
            <DSGT_PAYE_SW>
                <xsl:choose>
            	    <xsl:when test="string(HELP_OTHR_STAT_IND)"><xsl:value-of select="HELP_OTHR_STAT_IND"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </DSGT_PAYE_SW>
            <HOUS_UTIL_STAT_SW>
                <xsl:choose>
            	    <xsl:when test="string(HOUS_BILL_STAT_IND) and HOUS_BILL_STAT_IND='H'">
            	    	<xsl:value-of select="'N'"/>
            	    </xsl:when>
            	    <xsl:when test="string(HOUS_BILL_STAT_IND)">
            	    	<xsl:value-of select="HOUS_BILL_STAT_IND"/>
            	    </xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </HOUS_UTIL_STAT_SW>
            <HSHL_ADDR_CHANGED>
                <xsl:choose>
            	    <xsl:when test="string(HSHL_ADDR_CHANGED)"><xsl:value-of select="HSHL_ADDR_CHANGED"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </HSHL_ADDR_CHANGED>
            <HSHL_ADDR_COUNTY_CHANGED>
                <xsl:choose>
            	    <xsl:when test="string(HSHL_ADDR_COUNTY_CHANGED)"><xsl:value-of select="HSHL_ADDR_COUNTY_CHANGED"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </HSHL_ADDR_COUNTY_CHANGED>

            <HMO_CHANGED>
                <xsl:choose>
            	    <xsl:when test="string(HMO_CHANGED)"><xsl:value-of select="HMO_CHANGED"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </HMO_CHANGED>
            <HLESS_SW>
	             <xsl:choose>
	        	    <xsl:when test="string(HSHL_ADDR_DETAILS/HLESS_SW)"><xsl:value-of select="HSHL_ADDR_DETAILS/HLESS_SW"/></xsl:when>
	        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
	     		</xsl:choose>                
            </HLESS_SW>
             <!-- PCR 67239 Start -->
             <PAPRLESS_IND>
          		<xsl:choose>
          		  <xsl:when test="string(HSHL_ADDR_DETAILS/PAPRLESS_IND)"><xsl:value-of select="HSHL_ADDR_DETAILS/PAPRLESS_IND"/></xsl:when>
	        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
				</xsl:choose>
             </PAPRLESS_IND>
             <!-- PCR 67239 End -->
            <HSHL_CITY_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_CITY_ADR' />
                </xsl:call-template>
            </HSHL_CITY_ADR>
            <CLA_SRC_APP_IND>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/SRC_APP_IND' />
                </xsl:call-template>
            </CLA_SRC_APP_IND>
            <RES_CNTY_NUM>
       	    	<xsl:value-of select='HSHL_ADDR_DETAILS/CNTY_NUM' />
            </RES_CNTY_NUM>
            
            <HSHL_PHN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_HOME_PHN_NUM' />
                </xsl:call-template>
            </HSHL_PHN_NUM>
            <HSHL_ST_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_L1_ADR' />
                </xsl:call-template>            
            </HSHL_ST_ADR>
            <HSHL_STA_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_STA_ADR' />
                </xsl:call-template>            
            </HSHL_STA_ADR>
            <HSHL_ZIP_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_ZIP_ADR' />
                </xsl:call-template>            
            </HSHL_ZIP_ADR>
            <CNTY_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/CNTY_NUM' />
                </xsl:call-template>            
            </CNTY_NUM>
            <HSHL_L2_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_L2_ADR' />
                </xsl:call-template>             
            </HSHL_L2_ADR>
            <HSHL_CELL_PHN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_CELL_PHN_NUM' />
                </xsl:call-template>             
            </HSHL_CELL_PHN_NUM>
            <HSHL_EMAIL_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_EMAIL_ADR' />
                </xsl:call-template>             
            </HSHL_EMAIL_ADR>
            <HSHL_WORK_PHN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/HSHL_WORK_PHN_NUM' />
                </xsl:call-template>             
            </HSHL_WORK_PHN_NUM>
            <MSG_PHN_EXTN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/MSG_PHN_EXTN_NUM' />
                </xsl:call-template>             
            </MSG_PHN_EXTN_NUM>
            <WORK_PHN_EXTN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/WORK_PHN_EXTN_NUM' />
                </xsl:call-template>             
            </WORK_PHN_EXTN_NUM>
             <MSG_PHN_NUM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/MSG_PHN_NUM' />
                </xsl:call-template>             
            </MSG_PHN_NUM>
            <PREF_CNTC_IND>
				<xsl:choose>
	        	    <xsl:when test="string(HSHL_ADDR_DETAILS/PREF_CNTC_IND)"><xsl:value-of select="HSHL_ADDR_DETAILS/PREF_CNTC_IND"/></xsl:when>
	        	    <xsl:otherwise>0</xsl:otherwise>
	     		</xsl:choose>                
            </PREF_CNTC_IND>
            <PREF_CNTC_TM_TXT>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='HSHL_ADDR_DETAILS/PREF_CNTC_TM_TXT' />
                </xsl:call-template>             
            </PREF_CNTC_TM_TXT>
            <HSHL_SFX_DIR_ADR>
                <xsl:value-of select="' '"/>
            </HSHL_SFX_DIR_ADR>
            
            
            <IP_FST_NAM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='FST_NAM' />
                </xsl:call-template>            
            </IP_FST_NAM>
            <IP_LAST_NAM>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='LAST_NAM' />
                </xsl:call-template>            
            </IP_LAST_NAM>
            <IP_MID_INIT>
        	    <xsl:choose>
	        	    <xsl:when test="string(MID_INIT)"><xsl:value-of select="translate(MID_INIT,$lcletters,$ucletters)"/></xsl:when>
	        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
	     		</xsl:choose>
            </IP_MID_INIT>
            <IP_RES_SW>
                <xsl:value-of select="'Y'"/>
            </IP_RES_SW>
            <IP_RLT_CD>
                <xsl:value-of select="' '"/>
            </IP_RLT_CD>
            <IP_SFX_NAM>
                <xsl:value-of select="' '"/>
            </IP_SFX_NAM>
            <MA_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </MA_FILE_DT>
            <APP_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </APP_FILE_DT>
            <MA_RQST_SW>
            <!-- For Add a Program Applications we need to check if the value was 2 for Open programs which are requested during the process -->
       	    	<xsl:choose>
				       <xsl:when test="FAM_MA_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>
            </MA_RQST_SW>
            <FS_RQST_SW>
       	    	<xsl:choose>
				       <xsl:when test="FS_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose> 
            </FS_RQST_SW>
            
            <CC_RQST_SW>
       	    	<xsl:choose><!-- If INDV_CC_RQST_IND is 1 populate 'Y' else 'N'-->
				       <xsl:when test="CC_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose> 
            </CC_RQST_SW>
            <MPA_RQST_RESP>
       	    	<xsl:choose>
				       <xsl:when test="MPA_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>  
            </MPA_RQST_RESP>

			<xsl:choose>
				<xsl:when test="$IS_ADD_PRGM=1">
					<EBD_MEDCD_RQST_SW>
						<xsl:choose><!-- If EBD_RQST_IND is 1 populate 'Y' else 'N'-->
							<xsl:when test="EBD_PGM_SW = 1">
								<xsl:value-of select="'Y'" />								
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'N'" />								
							</xsl:otherwise>
						</xsl:choose>
					</EBD_MEDCD_RQST_SW>
				</xsl:when>
				<xsl:otherwise>
		 			<EBD_MEDCD_RQST_SW>
		       	    	<xsl:value-of select="' '"/>
		            </EBD_MEDCD_RQST_SW>
				</xsl:otherwise>
			</xsl:choose>			
			<BCP_FAM_RQST_SW>
       	    	<xsl:value-of select="' '"/>
            </BCP_FAM_RQST_SW>
            
            <!-- RMB CLA Changes PCR 43100 -->
            <BCP_CLA_RQST_SW>
       	    	<xsl:value-of select="CLA_PGM_SW"/>
            </BCP_CLA_RQST_SW>
            
            <INST_MA_RQST_SW>
       	    	<xsl:value-of select="' '"/>
            </INST_MA_RQST_SW>
            <KNOW_CARE_IND>
       	    	<xsl:value-of select="' '"/>
            </KNOW_CARE_IND>
            <FC_RQST_RESP>
       	    	<xsl:value-of select="' '"/>
            </FC_RQST_RESP>
            <LTC_RQST_RESP>
       	    	<xsl:value-of select="' '"/>
            </LTC_RQST_RESP>


            
          	<FPW_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </FPW_FILE_DT>
            <FPW_RQST_SW>
       	    	<xsl:choose>
				       <xsl:when test="FPW_PGM_SW = 1">
				        	<xsl:value-of select="'Y'"/>
				       </xsl:when>
				       <xsl:otherwise>
				        	  <xsl:value-of select="'N'"/>
				       </xsl:otherwise>
				 </xsl:choose>
            </FPW_RQST_SW>
            <FS_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </FS_FILE_DT>
            <CC_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </CC_FILE_DT>
            <MPA_FILE_DT>
                <xsl:value-of select="'9999-12-31'"/>
            </MPA_FILE_DT>
            <ONLN_SCRNR_RESP>
                <xsl:value-of select="' '"/>
            </ONLN_SCRNR_RESP>
            <RGN_NUM>
                <xsl:value-of select="'0'"/>
            </RGN_NUM>
            <CNSS_TRCT_NUM>
                <xsl:value-of select="'0'"/>
            </CNSS_TRCT_NUM>
            <RFA_NUM>
                <xsl:value-of select="'0'"/>
            </RFA_NUM>
            
            <xsl:choose>
          	    <xsl:when test="$IS_ADD_PRGM=1">
		 			<RTRO_MA_RESP>
			            <xsl:choose>
		                    <xsl:when test="MA_BKDT_MO_1_IND = 1">
		                        <xsl:value-of select="'3'"/>
		                    </xsl:when>
		                    <xsl:when test="MA_BKDT_MO_2_IND = 1">
		                        <xsl:value-of select="'2'"/>
		                    </xsl:when>
		                    <xsl:when test="MA_BKDT_MO_3_IND = 1">
		                        <xsl:value-of select="'1'"/>
		                    </xsl:when>
		                    <xsl:otherwise> <xsl:value-of select="'0'"/></xsl:otherwise>
		                </xsl:choose>
		                <!-- JAVA - If MA_BKDT_MO_1_IND is '1', populate '3'  else If MA_BKDT_MO_2_IND is '1' populate '2', else if MA_BKDT_MO_3_IND is '1', populate '1', else populate '0'. -->
		            </RTRO_MA_RESP>
		             <RTRO_FPW_RESP>
			            <xsl:choose>
		                    <xsl:when test="FPW_BKDT_MO_1_IND = 1">
		                        <xsl:value-of select="'3'"/>
		                    </xsl:when>
		                    <xsl:when test="FPW_BKDT_MO_2_IND = 1">
		                        <xsl:value-of select="'2'"/>
		                    </xsl:when>
		                    <xsl:when test="FPW_BKDT_MO_3_IND = 1">
		                        <xsl:value-of select="'1'"/>
		                    </xsl:when>
		                    <xsl:otherwise> <xsl:value-of select="'0'"/></xsl:otherwise>
		                </xsl:choose>
		                <!-- JAVA - If MA_BACKDT_MO_1_IND is '1', populate '3'  else If MA_BACKDT_MO_2_IND is '1' populate '2', else if MA_BACKDT_MO_3_IND is '1', populate '1', else populate '0'. -->
		            </RTRO_FPW_RESP>
          	    </xsl:when>
      	        <xsl:otherwise>	            	
      	        	 <RTRO_MA_RESP>
                		<xsl:value-of select="' '"/>
           			 </RTRO_MA_RESP>
		        </xsl:otherwise>
		    </xsl:choose>
		    
            <CMT_TXT>
                <xsl:value-of select="' '"/>
            </CMT_TXT>
            <APP_SRC_CD>
                <xsl:value-of select="' '"/>
            </APP_SRC_CD>
            <AGCY_NUM>
            	<xsl:value-of select="'0'"/>
            </AGCY_NUM>
		    <EMER_MA_RESP>
    	        <xsl:value-of select="' '"/>
            </EMER_MA_RESP>
		    <TB_RESP>
    	        <xsl:value-of select="' '"/>
            </TB_RESP>
		    <HELP_INDICATOR>
    	        <xsl:value-of select="'0'"/>
            </HELP_INDICATOR>
			<E_SIGN_IND>
                 <xsl:choose>
        	        <xsl:when test="string(E_SIGN_IND)"><xsl:value-of select="E_SIGN_IND"/></xsl:when>
    	        	<xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
 		    	</xsl:choose>
    		</E_SIGN_IND>
		    <SPS_E_SIGN_IND>
    	        <xsl:value-of select="'0'"/>
            </SPS_E_SIGN_IND>
            <PHN_NUM_TYP>
            	<xsl:choose>
	        	    <xsl:when test="HSHL_ADDR_DETAILS/PHN_NUM_TYP = 'N'">
	        	    	<xsl:value-of select="' '"/>
	        	    </xsl:when>
	        	    <xsl:when test="string(HSHL_ADDR_DETAILS/PHN_NUM_TYP)">
	        	    	<xsl:value-of select="HSHL_ADDR_DETAILS/PHN_NUM_TYP"/>
	        	    </xsl:when>
	        	    <xsl:otherwise>
	        	    	<xsl:value-of select="' '"/>
	        	    </xsl:otherwise>
	     		</xsl:choose>
            </PHN_NUM_TYP>            
            <ALT_ADDR_CHANGED>
                <xsl:choose>
            	    <xsl:when test="string(ALT_ADDR_CHANGED)"><xsl:value-of select="ALT_ADDR_CHANGED"/></xsl:when>
        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>                                        
            </ALT_ADDR_CHANGED>
			<!-- START alternative address -->    
			<ADD_REC_IND>    
   				<xsl:value-of select="'R'"/>    
			</ADD_REC_IND>
            <APT_ADR>
                <xsl:value-of select="' '"/>
            </APT_ADR>
            <CITY_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='ALT_ADDR_DETAILS/ALT_CITY_ADR' />
                </xsl:call-template>
            </CITY_ADR>
            <DIR_ADR>
                <xsl:value-of select="' '"/>
            </DIR_ADR>
            <NUM_ADR>
                <xsl:value-of select="' '"/>
            </NUM_ADR>
            <SFX_ADR>
                <xsl:value-of select="' '"/>
            </SFX_ADR>
            <ST_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='ALT_ADDR_DETAILS/ALT_ST_ADR' />
                </xsl:call-template>            
            </ST_ADR>
            <STA_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='ALT_ADDR_DETAILS/ALT_STA_ADR' />
                </xsl:call-template>               
            </STA_ADR>
            <UNIT_ADR>
                <xsl:value-of select="' '"/>
            </UNIT_ADR>
            <L2_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='ALT_ADDR_DETAILS/ALT_L2_ADR' />
                </xsl:call-template>             
            </L2_ADR>
            <SFX_DIR_ADR>
                <xsl:value-of select="' '"/>
            </SFX_DIR_ADR>
            <ZIP_ADR>
				<xsl:call-template name='convertToUppercase'>
                	<xsl:with-param name='toConvert' select='ALT_ADDR_DETAILS/ALT_ZIP_ADR' />
                </xsl:call-template>            
            </ZIP_ADR>
            <!-- END alternative address -->  
              
            <!-- CLA CHANGES RMB PCR 43100 -->
            
            <CLA_CHG_STAT_IND>
                <xsl:value-of select="CLA_CHG_STAT_IND"/>
            </CLA_CHG_STAT_IND>  
            
            <CLA_PGM_SW>
                <xsl:value-of select="CLA_PGM_SW"/>
            </CLA_PGM_SW> 
            
            <!-- CLA CHANGES RMB MAP TO TABLE T1053 PCR 43100 -->
            <BCP_CLA_PLAN_DETAILS DATA_EXIST="{$APP_CLA_REQ_IND}">
           		<ADD_REC_IND>
                    <xsl:value-of select="'R'"/>
     		    </ADD_REC_IND>
                <EFF_BEG_MO>
                    <xsl:value-of select="' '"/>
                    <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                </EFF_BEG_MO>         
                <EXTD_DUE_DT_RSN_CD>
                	<xsl:value-of select="' '"/>
                </EXTD_DUE_DT_RSN_CD>
                <EXTD_FEE_DUE_DT>
                    <xsl:value-of select="' '" />
                </EXTD_FEE_DUE_DT>   
                <FEE_PAID_AMT>
                	<xsl:value-of select="'0.00'"/>
                </FEE_PAID_AMT>
                <FEE_RQR_MET_IND>
                    <xsl:value-of select="'W'"/>
                </FEE_RQR_MET_IND>
                <APP_FEE_AMT>
		            <xsl:value-of select="'60.00'"/>
                </APP_FEE_AMT>
                <FEE_WAIV_RSN_CD>
                    <xsl:value-of select="'OT'" />
                </FEE_WAIV_RSN_CD>
                <FULL_FEE_PAID_DT>
                    <xsl:value-of select="' '" />
                </FULL_FEE_PAID_DT>
                <PROC_WO_FEE_RSN_CD>
                	<xsl:value-of select="' '"/>
                </PROC_WO_FEE_RSN_CD>              
                <SRC_HC_ENRL_NUM>
                    <xsl:value-of select="HC_ENRL_NUM"/>
                </SRC_HC_ENRL_NUM>
                <ITEM_TYP>
                    <xsl:value-of select="'R'"/>
                </ITEM_TYP>
            </BCP_CLA_PLAN_DETAILS> 
             <!-- MAGI TAX FILING CHANGES PCR 61703 -->              
             <HOUSEHOLD_TAXFILING_STATUS DATA_EXIST="{HOUSEHOLD_TAXFILING_STATUS/@DATA_EXIST}">
	              <APP_NUM>
	      	        	<xsl:value-of select="HOUSEHOLD_TAXFILING_STATUS/APP_NUM"/> 		    	 
	              </APP_NUM>
	              <EFF_BEG_MO>
	        	    <xsl:value-of select="HOUSEHOLD_TAXFILING_STATUS/EFF_BEG_MO"/> 		        
	              </EFF_BEG_MO>  
	              <TAX_FILR_CD>
	              <xsl:choose>
        	        <xsl:when test="string(HOUSEHOLD_TAXFILING_STATUS/TAX_FILR_CD)">
        	        	<xsl:value-of select="HOUSEHOLD_TAXFILING_STATUS/TAX_FILR_CD"/>
        	        </xsl:when>
    	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
 		    	</xsl:choose>    
	              </TAX_FILR_CD> 	               
            </HOUSEHOLD_TAXFILING_STATUS>
             <!-- MAGI TAX FILING CHANGES PCR 61703 -->
             
             <!-- Add a Program Changes Start PCR 68383 -->
             <xsl:if test="$IS_ADD_PRGM=1">
             
	            <APP_CNFD_SW>
	                <xsl:value-of select="' '"/>
	            </APP_CNFD_SW>
	            <APP_RCV_DT>
	                <xsl:value-of select="' '"/><!-- JAVA - Default to current date -->
	            </APP_RCV_DT>
	            <APP_STAT_CD>	            	
		            <xsl:value-of select="'AS'"/>
	            </APP_STAT_CD>
		        <OFC_NUM>
	                <xsl:value-of select="'0'"/>
	            </OFC_NUM>
	            <PRIR_SRVC_ELG_SW>
		            <xsl:choose><!-- If PRIR_REC_CPLT_IND is 1 populate 'Y' else 'N'-->
		        	    <xsl:when test="PRIR_REC_CPLT_IND = 1">
		        	    	<xsl:value-of select="'Y'"/>
		        	    </xsl:when>
		        	    <xsl:otherwise>
		        	    	<xsl:value-of select="'N'"/>
		        	    </xsl:otherwise>
		     		</xsl:choose>
	            </PRIR_SRVC_ELG_SW>
	            
	            <APP_MTHD_IND>
	           		 <xsl:value-of select="'A'"/>
	            </APP_MTHD_IND>
	            
		        <APP_STRT_DT>
	           		<xsl:value-of select="UPDT_DT" />
	            </APP_STRT_DT>
	            <OWNR_IND>
	             	<xsl:value-of select="'C'"/>
	            </OWNR_IND>
	            
	            <!-- Food Share Priority Service Details Start -->
		        <INCM_STOP_SW>
	                 <xsl:choose>
		        	    <xsl:when test="string(INCM_STOP_SW)"><xsl:value-of select="INCM_STOP_SW"/></xsl:when>
		        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		</xsl:choose>
	            </INCM_STOP_SW>
	            <LQD_ASET_AMT>
					<xsl:choose>
		        	    <xsl:when test="string(LQD_ASET_AMT)"><xsl:value-of select="LQD_ASET_AMT"/></xsl:when>
		        	    <xsl:otherwise>0.00</xsl:otherwise>
		     		</xsl:choose>
	            </LQD_ASET_AMT>
	            <LQD_ASET_AMT_IND>
					<xsl:call-template name='convertAccessIndToCwwInd'>
	                	<xsl:with-param name='toConvert' select='LQD_ASET_IND' />
	                </xsl:call-template>
	            </LQD_ASET_AMT_IND>
	            <MIG_FARM_WRKR_SW>
	            	<xsl:choose>
		        	    <xsl:when test="string(MIG_FARM_WRKR_SW)"><xsl:value-of select="MIG_FARM_WRKR_SW"/></xsl:when>
		        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		</xsl:choose>
	            </MIG_FARM_WRKR_SW>
	            <MO_GR_INCM_AMT>
					<xsl:choose>
		        	    <xsl:when test="string(MO_GR_INCM_AMT)"><xsl:value-of select="MO_GR_INCM_AMT"/></xsl:when>
		        	    <xsl:otherwise>0.00</xsl:otherwise>
		     		</xsl:choose>            
	            </MO_GR_INCM_AMT>
	            <MO_GR_INCM_AMT_IND>
					<xsl:call-template name='convertAccessIndToCwwInd'>
	                	<xsl:with-param name='toConvert' select='MO_GR_INCM_IND' />
	                </xsl:call-template>
	            </MO_GR_INCM_AMT_IND>
	            <MO_RENT_MRTG_AMT>
					<xsl:choose>
		        	    <xsl:when test="string(MO_RENT_MRTG_AMT)"><xsl:value-of select="MO_RENT_MRTG_AMT"/></xsl:when>
		        	    <xsl:otherwise>0.00</xsl:otherwise>
		     		</xsl:choose>              
	            </MO_RENT_MRTG_AMT>
	            <MO_RENT_MRTG_A_IND>
					<xsl:call-template name='convertAccessIndToCwwInd'>
	                	<xsl:with-param name='toConvert' select='MO_RENT_MRTG_IND' />
	                </xsl:call-template>
	            </MO_RENT_MRTG_A_IND>
	            <MO_UTIL_AMT>
					<xsl:choose>
		        	    <xsl:when test="string(MO_UTIL_AMT)"><xsl:value-of select="MO_UTIL_AMT"/></xsl:when>
		        	    <xsl:otherwise>0.00</xsl:otherwise>
		     		</xsl:choose>              
	            </MO_UTIL_AMT>
	            <MO_UTIL_AMT_IND>
					<xsl:call-template name='convertAccessIndToCwwInd'>
	                	<xsl:with-param name='toConvert' select='MO_UTIL_IND' />
	                </xsl:call-template>
	            </MO_UTIL_AMT_IND>
	            <NEW_INCM_SW>
	                 <xsl:choose>
		        	    <xsl:when test="string(NEW_INCM_SW)"><xsl:value-of select="NEW_INCM_SW"/></xsl:when>
		        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		</xsl:choose>                
	            </NEW_INCM_SW>
	            <PRIR_SRVC_DTER_DT>
	                <xsl:value-of select="' '"/>
	                <!-- JAVA - Default to APP_FILE_DT in T1002-->
	            </PRIR_SRVC_DTER_DT>
	            <RCV_FS_CUR_MO_SW>
	                 <xsl:choose>
		        	    <xsl:when test="string(RCV_FS_CUR_MO_SW)"><xsl:value-of select="RCV_FS_CUR_MO_SW"/></xsl:when>
		        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		</xsl:choose>                
	            </RCV_FS_CUR_MO_SW>
	            <WMEN_CHLD_SHLT_SW>
	                 <xsl:choose>
		        	    <xsl:when test="string(WMEN_CHLD_SHLT_SW)"><xsl:value-of select="WMEN_CHLD_SHLT_SW"/></xsl:when>
		        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		</xsl:choose>                 
	            </WMEN_CHLD_SHLT_SW>
            <!-- Food Share Priority Service Details End -->
            <!-- Food Share hardship -->
	            <IP_CARE_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="CARE_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_CARE_EXMP_IND>
	            <IP_EDB_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="EDB_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_EDB_EXMP_IND>
	            <IP_TRNSP_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="TRNSP_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_TRNSP_EXMP_IND>
	            <IP_WORK_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="WORK_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_WORK_EXMP_IND>
	            <IP_WTHR_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="WTHR_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_WTHR_EXMP_IND>
	            <IP_BUS_HR_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="BUS_HR_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_BUS_HR_EXMP_IND>	            
		        <IP_CC_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="CC_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_CC_EXMP_IND>
	            <IP_ILNS_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="ILNS_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_ILNS_EXMP_IND>
	            <IP_OTHR_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="OTHR_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_OTHR_EXMP_IND>
	            <IP_UCMFT_EXMP_IND>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="UCMFT_EXMP_IND"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="0"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_UCMFT_EXMP_IND>
	            <IP_OTHR_RSN_TXT>
		            <xsl:choose>
		        		<xsl:when test="FS_IVW_RESP = 'P' or FS_IVW_RESP = '0'">
	            			<xsl:value-of select="OTHR_RSN_TXT"/>
	            		</xsl:when>	
	            		<xsl:otherwise>
	            	 		<xsl:value-of select="' '"/>
	            		</xsl:otherwise>
	        	    </xsl:choose>	
	            </IP_OTHR_RSN_TXT>
            
            
             </xsl:if>
             
             <!-- Add a Program Changes END  PCR 68383 -->
             
            <INDIVIDUALS DATA_EXIST="{INDIVIDUALS/@DATA_EXIST}">
                <xsl:for-each select="INDIVIDUALS/INDIVIDUAL">
                    <INDIVIDUAL DATA_EXIST="{INDIVIDUAL/@DATA_EXIST}">
                        <INDV_SEQ_NUM>
                            <xsl:value-of select="INDV_SEQ_NUM"/>
                        </INDV_SEQ_NUM>
                        <ALN_SPONSER_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(ALN_SPONSER_SW)"><xsl:value-of select="ALN_SPONSER_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </ALN_SPONSER_SW>
                         <HAVE_SPONSER_SW>		                 
		     		    	<xsl:choose>
			            	    <xsl:when test="string(HAS_SPON_RESP)"><xsl:value-of select="HAS_SPON_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </HAVE_SPONSER_SW>
                        <ALN_IMMIGR_STAT_CD>		                 
		     		    	<xsl:choose>
			            	    <xsl:when test="string(ALN_IMMIGR_STAT_CD)"><xsl:value-of select="ALN_IMMIGR_STAT_CD"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </ALN_IMMIGR_STAT_CD>
                        <SPONSER_TYPE>		                 
		     		    	<xsl:choose>
			            	    <xsl:when test="string(SPON_TYP)"><xsl:value-of select="SPON_TYP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SPONSER_TYPE>
                        <SPONSER_INDV_SEQ_NUM>		               
		     		    	<xsl:choose>
			            	    <xsl:when test="string(SPON_INDV_SEQ_NUM)"><xsl:value-of select="SPON_INDV_SEQ_NUM"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SPONSER_INDV_SEQ_NUM>
                        <ORG_NAM>		                  
		     		    	<xsl:choose>
			            	    <xsl:when test="string(ORG_NAM)"><xsl:value-of select="ORG_NAM"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </ORG_NAM>
                        <BRTH_DT>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'"><xsl:value-of select="DC_BRTH_DT"/></xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0'"><xsl:value-of select="DC_BRTH_DT"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </BRTH_DT>
                        <FST_NAM>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_FST_NAM' />
					                </xsl:call-template>             
			            	    </xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0'">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_FST_NAM' />
					                </xsl:call-template>             
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </FST_NAM>
                        <INDV_ESTB_STAT_IND>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'"><xsl:value-of select="'R'"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'E'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </INDV_ESTB_STAT_IND>
                        <RLVN_IND>
	                        <xsl:value-of select="'R'"/>
	                    </RLVN_IND>    
                        <LAST_NAM>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_LAST_NAM' />
					                </xsl:call-template>             
			            	    </xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0'">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_LAST_NAM' />
					                </xsl:call-template>             
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </LAST_NAM>
                        <SFX_NAM>
                            <xsl:value-of select="' '"/>
                        </SFX_NAM>
                        <MID_INIT>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0' and string(DC_MID_INIT)">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_MID_INIT' />
					                </xsl:call-template>             
			            	    </xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0' and string(DC_MID_INIT)">
									<xsl:call-template name='convertToUppercase'>
					                	<xsl:with-param name='toConvert' select='DC_MID_INIT' />
					                </xsl:call-template>             
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
				     	</MID_INIT>
                        <PIN_NUM>
                            <xsl:value-of select="PIN_NUM"/>
                        </PIN_NUM>
                        <PRIM_PRSN_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(PRIM_PRSN_SW) = 'Y'">
				        	        <xsl:value-of select="'Y'"/>
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'N'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </PRIM_PRSN_SW>
                        <SEX_IND>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'">
					                	<xsl:value-of select="DC_SEX_IND"/>
			            	    </xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0'">
					                	<xsl:value-of select="DC_SEX_IND"/>
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
		     		    </SEX_IND>
                        <SNDX_NUM>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'">
					                	<xsl:value-of select="' '"/>
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SNDX_NUM>
                        <SSN_NUM>
		                    <xsl:choose>
			            	    <xsl:when test="string(PIN_NUM) = '0'">
					                	<xsl:value-of select="DC_SSN_NUM"/>
			            	    </xsl:when>
			            	    <xsl:when test="string(PIN_NUM) != '0'">
					                	<xsl:value-of select="DC_SSN_NUM"/>
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SSN_NUM>                        
                       <FPW_RQST_SW>
			            	<xsl:choose><!-- If INDV_FPW_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FPW_RQST_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FPW_RQST_IND != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </FPW_RQST_SW>
                        <FS_RQST_SW>
			            	<xsl:choose><!-- If INDV_FS_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FS_RQST_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FS_RQST_IND != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </FS_RQST_SW>
                        <CC_RQST_SW>
			            	<xsl:choose><!-- If INDV_CC_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_CC_RQST_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_CC_RQST_IND != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </CC_RQST_SW>
                         <SS_NUM_VFCN_CD>
	                        <xsl:value-of select="SS_NUM_VER_CD"/>
                        </SS_NUM_VFCN_CD>
                        <MPA_SW>
	                        <xsl:value-of select="'N'"/>
                        </MPA_SW>
                        <BC_RQST_SW>
			            	<xsl:choose><!-- If BC_RQST_SW is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FMA_RQST_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FMA_RQST_IND != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </BC_RQST_SW>
                       <MA_RQST_SW>
			            	<xsl:choose><!-- If INDV_FMA_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FMA_RQST_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INDV_FMA_RQST_IND != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </MA_RQST_SW>
                       <EBD_MEDCD_RQST_SW>
			            	<xsl:choose><!-- If INDV_FS_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and $IS_INDV_EBD = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and $IS_INDV_EBD != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </EBD_MEDCD_RQST_SW>
                        <BCP_FAM_RQST_SW>
			            	<xsl:choose><!-- If INDV_FS_RQST_IND is 1 populate 'Y' else 'N'-->
				        	    <xsl:when  test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/BCP_FAM_RQST_SW = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/BCP_FAM_RQST_SW != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </BCP_FAM_RQST_SW>
                        <!-- RMB CLA Changes PCR 43100 -->                     
                        <BCP_CLA_RQST_SW>
					         <xsl:choose>
						        <xsl:when test="string(BCP_CLA_RQST_SW)"><xsl:value-of select="BCP_CLA_RQST_SW"/></xsl:when>
						        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     	 </xsl:choose>                                    
                        </BCP_CLA_RQST_SW>
                        
						<INST_MA_RQST_SW>
    		            	<xsl:choose><!-- If living arrangement type is in ('06','08','20','22') AND HC_RQST_IND=1 populate 'Y' else 'N'-->
				        	    <xsl:when  test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INST_MA_RQST_SW = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:when test="(string(PIN_NUM) = '0' or $IS_ADD_PRGM=1) and INDIVIDUAL_PROFILE/INST_MA_RQST_SW != 1">
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="' '"/>
				        	    </xsl:otherwise>
				     		</xsl:choose>
                        </INST_MA_RQST_SW>
                         <!-- MAGI HOUSEHOLD MEMBERS/DEMOGRAPHICS PAGE CHANGES PCR 61703 -->
                        <APP_TAX_DEP_CO_FIL_IND>
				              <xsl:choose>
				       	    	<xsl:when test="string(APP_TAX_DEP_CO_FIL_IND)"><xsl:value-of select="APP_TAX_DEP_CO_FIL_IND"/></xsl:when>
				   	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					    	 </xsl:choose>
				            </APP_TAX_DEP_CO_FIL_IND>	
				            <APP_IND_LIV_OUT_HH_IND>
				              <xsl:choose>
				       	    	<xsl:when test="string(APP_IND_LIV_OUT_HH_IND)"><xsl:value-of select="APP_IND_LIV_OUT_HH_IND"/></xsl:when>
				   	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					    		</xsl:choose>
				            </APP_IND_LIV_OUT_HH_IND>  
				            <TAX_INDV_OTSD_RESP>
				              <xsl:choose>
				       	    	<xsl:when test="string(TXIND_OTSD_HH_IND)"><xsl:value-of select="TXIND_OTSD_HH_IND"/></xsl:when>
				   	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					    	  </xsl:choose>
				        </TAX_INDV_OTSD_RESP> 
				         <!-- MAGI HOUSEHOLD MEMBERS/DEMOGRAPHICS PAGE CHANGES PCR 61703 -->    
                        <RELATIONSHIPS DATA_EXIST="{RELATIONSHIPS/@DATA_EXIST}">
                            <xsl:for-each select="RELATIONSHIPS/RELATIONSHIP">
                                <RELATIONSHIP DATA_EXIST="{RELATIONSHIP/@DATA_EXIST}">
                                    <REF_INDV_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(REF_INDV_SEQ_NUM)"><xsl:value-of select="REF_INDV_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>
                                    </REF_INDV_SEQ_NUM>
                                    <SRC_INDV_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_INDV_SEQ_NUM)"><xsl:value-of select="SRC_INDV_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>
                                    </SRC_INDV_SEQ_NUM>
                                    <CARE_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(CARE_RESP)"><xsl:value-of select="CARE_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                    
                                    </CARE_RESP>
                                    <EFF_BEG_MO>                                        
                                        <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            	     <xsl:value-of select="999912"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_BEG_MO>
                                    <PNP_TGHR_SW>
					                    <xsl:choose>
						            	    <xsl:when test="PNP_TGHR_SW = 'Y'">
						            	    	<xsl:value-of select="'Y'"/>
						            	    </xsl:when>
						            	    <xsl:when test="PNP_TGHR_SW = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                            
                                    </PNP_TGHR_SW>
                                    <RLT_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='RLT_CD' />
						                </xsl:call-template>             
                                        <!-- JAVA - If the RLT_CD is 'FTR', read PATER_ESTB_SW for the INDV_SEQ_NUM from APP_IN_ABSNP where PATER_ESTB_SW is not 'M'. If any of the records have a value of Y populate 'FTR' else if any of the records have a value of L populate 'AFR' else If any of the records have a value of N populate 'CFR' else populate spaces.-->
                                    </RLT_CD>
                                    <TAX_DPND_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(TAX_DPND_RESP)">
						            	    	<xsl:value-of select="TAX_DPND_RESP"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                            
                                    </TAX_DPND_RESP>
                                    <PRNT_ROLE_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(PRNT_ROLE_RESP)"><xsl:value-of select="PRNT_ROLE_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                    
                                    </PRNT_ROLE_RESP>
                                </RELATIONSHIP>
                            </xsl:for-each>
                        </RELATIONSHIPS>

                        <LOSS_OF_EMPLOYMENTS DATA_EXIST="N"></LOSS_OF_EMPLOYMENTS>
                        
                        <PRIOR_SSI DATA_EXIST="{PRIOR_SSI/@DATA_EXIST}">
	                        <xsl:choose>
    	   	            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SSI_DCOND_RESP)= 'Y'">
		                            <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
									</ADD_REC_IND>
		                            <EFF_BEG_MO>
		                                <xsl:value-of select="' '"/>
		                                <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
		                            </EFF_BEG_MO>
    	   	            	    </xsl:when>		                            
							</xsl:choose>
                        </PRIOR_SSI>
                                                                                            
                        <AI_IND>
							<xsl:choose>
	                       	    <xsl:when test="AI_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>				        	   
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </AI_IND>
                        <ASIA_IND>
							<xsl:choose>
	                       	    <xsl:when test="ASIA_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>				        	   
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </ASIA_IND>
                        <BLK_IND>
							<xsl:choose>
	                       	    <xsl:when test="BLK_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </BLK_IND>
                        <HSPC_IND>
							<xsl:choose>
	                       	    <xsl:when test="HSPC_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </HSPC_IND>
                        <LANG_CD>
		                    <xsl:choose>
			            	    <xsl:when test="string(LANG_CD)"><xsl:value-of select="LANG_CD"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </LANG_CD>
                        <PAC_ISL_IND>
							<xsl:choose>
	                       	    <xsl:when test="PAC_ISL_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </PAC_ISL_IND>
                      	<WHT_IND>
							<xsl:choose>
	                       	    <xsl:when test="WHT_IND = 1">
				        	    	<xsl:value-of select="'Y'"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'N'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </WHT_IND>
                        <SS_NUM_APP_DT>
							<xsl:choose>
	                       	    <xsl:when test="string(SS_NUM_APP_DT)">
				        	    	<xsl:value-of select="SS_NUM_APP_DT"/>
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'9999-12-31'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </SS_NUM_APP_DT>
                        <DEATH_DT>
							<xsl:choose>
	                       	    <xsl:when test="string(DEATH_DT)">
				        	    	<xsl:value-of select="DEATH_DT" />
				        	    </xsl:when>
				        	    <xsl:otherwise>
				        	    	<xsl:value-of select="'9999-12-31'"/>
				        	    </xsl:otherwise>
			        	    </xsl:choose>
                        </DEATH_DT>
                        <US_CTZN_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(US_CTZN_SW)"><xsl:value-of select="US_CTZN_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </US_CTZN_SW>
                        
                        <INTN_RES_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INTN_RES_RESP)"><xsl:value-of select="INTN_RES_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </INTN_RES_RESP>
                        <LIVE_ARNG_TYP>
                            <xsl:choose>
		                      	<xsl:when test="string(CHLD_OUT_HOME_RESP) and string(CHLD_OUT_HOME_RESP)='Y'">
		            	        	<xsl:value-of select="'01'"/>
		            	        </xsl:when>
			            	    <xsl:when test="string(LIVE_ARNG_TYP)"><xsl:value-of select="LIVE_ARNG_TYP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </LIVE_ARNG_TYP>
                        <LIVE_ARNG_DT>
		                    <xsl:choose>
			            	    <xsl:when test="string(LIVE_ARNG_DT)"><xsl:value-of select="LIVE_ARNG_DT"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
		     		    	</xsl:choose>                        
                        </LIVE_ARNG_DT>
                        <MIG_FARM_WRKR_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(MIG_FARM_WRKR_SW)"><xsl:value-of select="MIG_FARM_WRKR_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </MIG_FARM_WRKR_SW>
                        <MRTL_STAT_CD>
		                    <xsl:choose>
			            	    <xsl:when test="string(MRTL_STAT_CD)"><xsl:value-of select="MRTL_STAT_CD"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>                        
                        </MRTL_STAT_CD>
                        <RES_WI_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(RES_WI_SW)"><xsl:value-of select="RES_WI_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RES_WI_SW>
                        
                         <!-- CLA WaitList Start-->
    					<WLST_SEQ_NUM >
		                    <xsl:choose>
			            	    <xsl:when test="string(WLST_SEQ_NUM/WLST_NUM)">
			            	    	<xsl:value-of select="WLST_SEQ_NUM/WLST_NUM"/>
			            	    </xsl:when>
			        	        <xsl:otherwise>0</xsl:otherwise>
		     		    	</xsl:choose>                        
                        </WLST_SEQ_NUM>                        

                        <OP_AODA_TMT_RCV_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/OP_AODA_TMT_RCV_SW)"><xsl:value-of select="INDIVIDUAL_PROFILE/OP_AODA_TMT_RCV_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </OP_AODA_TMT_RCV_SW>
                        <RCV_FSTR_CARE_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/FSTR_CARE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/FSTR_CARE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RCV_FSTR_CARE_SW>
                        <FSTR_CARE_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/FSTR_CARE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/FSTR_CARE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </FSTR_CARE_RESP>
                        <GEN_RLF_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/GEN_RLF_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/GEN_RLF_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </GEN_RLF_RESP>
                        <INCM_INT_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/INCM_INT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/INCM_INT_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </INCM_INT_RESP>
                        <KINSHIP_CARE_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/KINSHIP_CARE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/KINSHIP_CARE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </KINSHIP_CARE_RESP>
                        <RCV_FS_OTH_ST_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/RCV_FS_OTH_ST_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/RCV_FS_OTH_ST_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RCV_FS_OTH_ST_RESP>
                        <RCV_IND_FS_PG_RESP>
		     		    	<xsl:choose>
						         <xsl:when test="INDIVIDUAL_PROFILE/TRB_CMDY_RESP='R'">
						                <xsl:value-of select="'Y'"/>
						         </xsl:when>
						         <xsl:when test="INDIVIDUAL_PROFILE/TRB_CMDY_RESP='H'">
						                <xsl:value-of select="' '"/>
						         </xsl:when>						                   
						         <xsl:otherwise> 
						                 <xsl:value-of select="'N'"/>
						          </xsl:otherwise>
						     </xsl:choose>     
                        </RCV_IND_FS_PG_RESP>
                        <RCV_SSI_LTR_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/RCV_SSI_LTR_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/RCV_SSI_LTR_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RCV_SSI_LTR_RESP>
                        <RCV_SSI_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/RCV_SSI_SW)"><xsl:value-of select="INDIVIDUAL_PROFILE/RCV_SSI_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RCV_SSI_SW>
                        <SSI_1619B_RCV_SW>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SSI_1619B_RCV_SW)"><xsl:value-of select="INDIVIDUAL_PROFILE/SSI_1619B_RCV_SW"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SSI_1619B_RCV_SW>
                        <BNFT_KC_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/BNFT_KC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/BNFT_KC_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </BNFT_KC_RESP>
                        <BNFT_FC_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/BNFT_FC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/BNFT_FC_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </BNFT_FC_RESP>
                        <BNFT_CRT_O_KC_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/BNFT_CRT_O_KC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/BNFT_CRT_O_KC_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </BNFT_CRT_O_KC_RESP>
                        <BNFT_SG_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/BNFT_SG_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/BNFT_SG_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </BNFT_SG_RESP>
                        <ACDT_RESP>		                    
		     		    	<xsl:choose>						        
						         	<xsl:when test="INDIVIDUAL_PROFILE/ACDT_RESP='H'">
						           	     <xsl:value-of select="' '"/>
						        	 </xsl:when>						                   
						    	<xsl:otherwise> 
						    	<xsl:choose>
			            	   	 	<xsl:when test="string(INDIVIDUAL_PROFILE/ACDT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/ACDT_RESP"/></xsl:when>
			        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    		</xsl:choose>
						   		</xsl:otherwise>
						    </xsl:choose>  
                        </ACDT_RESP>
                        <HC_CVRG_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/HC_CVRG_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/HC_CVRG_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </HC_CVRG_RESP>
                        <MED_EXP_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/MED_EXP_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/MED_EXP_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </MED_EXP_RESP>
                        <MIL_ALLOT_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/MIL_ALLOT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/MIL_ALLOT_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </MIL_ALLOT_RESP>
                        <MONY_OT_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/MONY_OT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/MONY_OT_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </MONY_OT_RESP>
                        <NATL_RFGE_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/NATL_RFGE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/NATL_RFGE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </NATL_RFGE_RESP>
                        <SU_CST_COAL_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_COAL_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_COAL_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_COAL_RESP>
                        <SU_CST_ELEC_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_ELEC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_ELEC_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_ELEC_RESP>
                        <SU_CST_GAS_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_GAS_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_GAS_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_GAS_RESP>
                        <SU_CST_HOME_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_HOME_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_HOME_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_HOME_RESP>
                        <SU_CST_ISTL_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_ISTL_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_ISTL_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_ISTL_RESP>
                        <SU_CST_LPGAS_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_LPGAS_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_LPGAS_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_LPGAS_RESP>
                        <SU_CST_MBL_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_MBL_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_MBL_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_MBL_RESP>
                        <SU_CST_OTHR_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_OTHR_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_OTHR_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_OTHR_RESP>
                        <SU_CST_MTGE_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_MTGE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_MTGE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_MTGE_RESP>
                        <SU_CST_PHN_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_PHN_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_PHN_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_PHN_RESP>
                        <SU_CST_RENT_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_RENT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_RENT_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_RENT_RESP>
                        <SU_CST_SWR_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_SWR_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_SWR_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_SWR_RESP>
                        <SU_CST_TAX_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_TAX_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_TAX_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_TAX_RESP>
                        <SU_CST_TRSH_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_TRSH_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_TRSH_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_TRSH_RESP>
                        <SU_CST_WOOD_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_WOOD_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_WOOD_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_WOOD_RESP>
                        <SU_CST_WTR_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_WTR_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_WTR_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_WTR_RESP>
                        <SU_CST_WWT_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SU_CST_WWT_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SU_CST_WWT_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SU_CST_WWT_RESP>
                        <TRB_TANF_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/TRB_TANF_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/TRB_TANF_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </TRB_TANF_RESP>
                        <WORK_COMP_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/WORK_COMP_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/WORK_COMP_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </WORK_COMP_RESP>
                        <PNSN_RETR_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/PNSN_RETR_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/PNSN_RETR_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </PNSN_RETR_RESP>
                        <RMR_BRD_INC_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/RMR_BRD_INC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/RMR_BRD_INC_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RMR_BRD_INC_RESP>
                        <PAY_RMR_BRD_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/PAY_RMR_BRD_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/PAY_RMR_BRD_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </PAY_RMR_BRD_RESP>
                        <RMR_BRD_INCM_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/RMR_BRD_INCM_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/RMR_BRD_INCM_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RMR_BRD_INCM_RESP>
                        <SSI_DCOND_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/SSI_DCOND_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/SSI_DCOND_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </SSI_DCOND_RESP>
                        <DPND_CARE_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/DPND_CARE_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/DPND_CARE_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </DPND_CARE_RESP>
                        <DABL_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/DABL_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/DABL_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </DABL_RESP>
                         <EMPL_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/EMPL_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/EMPL_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </EMPL_RESP>
                        <CHLD_SPRT_PAY_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/CHLD_SPRT_PAY_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/CHLD_SPRT_PAY_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </CHLD_SPRT_PAY_RESP>
                        <DRUG_FELN_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/DRUG_FELN_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/DRUG_FELN_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </DRUG_FELN_RESP>
		                <FLEEING_FROM_A_FELONY_RESP>
		                    <xsl:choose>
		            	        <xsl:when test="string(INDIVIDUAL_PROFILE/FF_RESP_SW) = 'DC' or string(INDIVIDUAL_PROFILE/FF_RESP_SW) = ''">
		            	        	<xsl:value-of select="' '"/>
		            	        </xsl:when>
		            	        <xsl:when test="(INDIVIDUAL_PROFILE/INDV_FS_RQST_IND = 1 or INDIVIDUAL_PROFILE/INDV_CC_RQST_IND = 1) and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != 'DC'">
		            	        	<xsl:value-of select="INDIVIDUAL_PROFILE/FF_RESP_SW"/>
		            	        </xsl:when>
		            	        <xsl:when test="($APP_FS_RQST_SW = '1' or $APP_CC_RQST_SW = '1') and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != 'DC' and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != ' '">
		            	        	<xsl:value-of select="INDIVIDUAL_PROFILE/FF_RESP_SW"/>
		            	        </xsl:when>
		            	        <xsl:when test="INDIVIDUAL_PROFILE/FF_STAT_IND = 'Y' and string(INDIVIDUAL_PROFILE/FF_RESP_SW)">
		            	        	<xsl:value-of select="INDIVIDUAL_PROFILE/FF_RESP_SW"/>
		            	        </xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
		                </FLEEING_FROM_A_FELONY_RESP>
		                <FLEEING_FROM_A_FELONY_SRC_CD>
		                	<xsl:choose>
		            	        <xsl:when test="string(INDIVIDUAL_PROFILE/FF_RESP_SW) = 'DC'">
		            	        	<xsl:value-of select="' '"/>
		            	        </xsl:when>
		            	        <xsl:when test="(INDIVIDUAL_PROFILE/INDV_FS_RQST_IND = 1 or INDIVIDUAL_PROFILE/INDV_CC_RQST_IND = 1) and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != 'DC'">
		            	        	<xsl:value-of select="'SD'"/>
		            	        </xsl:when>
			            		<xsl:when test="($APP_FS_RQST_SW = '1' or $APP_CC_RQST_SW = '1') and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != 'DC' and string(INDIVIDUAL_PROFILE/FF_RESP_SW) != ' '">
	        	    				<xsl:value-of select="'SD'"/>
	        	    			</xsl:when>
		            	        <xsl:when test="INDIVIDUAL_PROFILE/FF_STAT_IND = 'Y' and string(INDIVIDUAL_PROFILE/FF_RESP_SW)">
		            	        	<xsl:value-of select="'SD'"/>
		            	        </xsl:when>
				        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							</xsl:choose>					        	    
		                </FLEEING_FROM_A_FELONY_SRC_CD>
                        <FSET_SCTN_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/FSET_SCTN_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/FSET_SCTN_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </FSET_SCTN_RESP>
                        <EDUC_AID_RESP>
		                    <xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/EDUC_AID_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/EDUC_AID_RESP"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </EDUC_AID_RESP>
                   		<CHLD_TRB_MBR_RESP>
		                    <xsl:choose>
		            	        <xsl:when test="string(CHLD_TRB_MBR_RESP)"><xsl:value-of select="CHLD_TRB_MBR_RESP"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
			            </CHLD_TRB_MBR_RESP>
			             <LTC_RESP>
							<xsl:choose>
								<xsl:when test="string(INDIVIDUAL_PROFILE/LTC_RESP)">
									<xsl:value-of select="INDIVIDUAL_PROFILE/LTC_RESP" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="' '" />
								</xsl:otherwise>
							</xsl:choose>
						</LTC_RESP>
			            <TRB_MBR_RESP>
		                    <xsl:choose>
		            	        <xsl:when test="string(TRB_MBR_RESP)"><xsl:value-of select="TRB_MBR_RESP"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
			            </TRB_MBR_RESP>
			            <YEHOC_RESP>
		                    <xsl:choose>
		            	        <xsl:when test="string(INDIVIDUAL_PROFILE/YEHOC_RESP)"><xsl:value-of select="INDIVIDUAL_PROFILE/YEHOC_RESP"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
			            </YEHOC_RESP>
                        <CHLD_OUT_HOME_RESP>
		        	         <xsl:choose>
		            	        <xsl:when test="string(CHLD_OUT_HOME_RESP)"><xsl:value-of select="CHLD_OUT_HOME_RESP"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
			            </CHLD_OUT_HOME_RESP>
			             <!-- MAGI CHANGES PCR 61703 -->   
                        <EDUCATION_AID_SEMESTERS DATA_EXIST="{EDUCATION_AID_SEMESTERS/@DATA_EXIST}">
                            <xsl:for-each select="EDUCATION_AID_SEMESTERS/EDUCATION_AID_SEMESTER">
                                <EDUCATION_AID_SEMESTER DATA_EXIST="{EDUCATION_AID_SEMESTER/@DATA_EXIST}">
									<APP_NUM>
											<xsl:choose>
												<xsl:when test="string(APP_NUM)"><xsl:value-of select="APP_NUM"/></xsl:when>
												<xsl:otherwise>0</xsl:otherwise>
											</xsl:choose>                                        
									</APP_NUM>                                
									<INDV_SEQ_NUM>
											<xsl:choose>
												<xsl:when test="string(INDV_SEQ_NUM)"><xsl:value-of select="INDV_SEQ_NUM"/></xsl:when>
												<xsl:otherwise>0</xsl:otherwise>
											</xsl:choose>                                        
									 </INDV_SEQ_NUM>
									<SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
									<ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
									<ADD_REC_IND>
										<xsl:value-of select="'R'"/>				
									</ADD_REC_IND>                                                                                                        
									<EFF_BEG_MO>
									   <xsl:value-of select="SEM_TMST_BEG_MO"/>                                                                           
								   </EFF_BEG_MO>
									<EFF_END_MO>
										  <xsl:value-of select="SEM_TMST_END_MO"/>                            
								   </EFF_END_MO>
								   <EDUCATION_EIDS DATA_EXIST="{EDUCATION_EIDS/@DATA_EXIST}">
										<xsl:for-each select="EDUCATION_EIDS/EDUCATION_EID">
											<EDUCATION_EID DATA_EXIST="{EDUCATION_EID/@DATA_EXIST}">
											  <APP_NUM>
													<xsl:choose>
														<xsl:when test="string(APP_NUM)"><xsl:value-of select="APP_NUM"/></xsl:when>
														<xsl:otherwise>0</xsl:otherwise>
													</xsl:choose>                                        
											  </APP_NUM>                                
											   <INDV_SEQ_NUM>
													<xsl:choose>
														<xsl:when test="string(INDV_SEQ_NUM)"><xsl:value-of select="INDV_SEQ_NUM"/></xsl:when>
														<xsl:otherwise>0</xsl:otherwise>
													</xsl:choose>                                        
												</INDV_SEQ_NUM>
												<SEQ_NUM>
													<xsl:choose>
														<xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
														<xsl:otherwise>0</xsl:otherwise>
													</xsl:choose>                                        
												</SEQ_NUM>
												<EA_SEQ_NUM>
													<xsl:choose>
														<xsl:when test="string(EDUC_AID_SEQ_NUM)"><xsl:value-of select="EDUC_AID_SEQ_NUM"/></xsl:when>
														<xsl:otherwise>0</xsl:otherwise>
													</xsl:choose> 
											   </EA_SEQ_NUM>
												<EDUC_AID_TYP_CD>
													<xsl:choose>
														<xsl:when test="string(EDUC_AID_TYP_CD)"><xsl:value-of select="EDUC_AID_TYP_CD"/></xsl:when>
														<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
													</xsl:choose> 
											   </EDUC_AID_TYP_CD>                                   
												<BEG_MO>
														  <xsl:value-of select="SEM_TMST_BEG_MO"/>                                   
											   </BEG_MO>
												<END_MO>
														  <xsl:value-of select="SEM_TMST_END_MO"/>                                   
											   </END_MO>                                   
												<EDUC_AID_AMT>
												   <xsl:choose>
														<xsl:when test="string(EDUC_AID_AMT)"><xsl:value-of select="EDUC_AID_AMT"/></xsl:when>
														<xsl:otherwise>0</xsl:otherwise>
													</xsl:choose>                                         
												</EDUC_AID_AMT>
												 <EDUC_AID_AMT_IND>
													<xsl:call-template name='convertAccessIndToCwwInd'>
														<xsl:with-param name='toConvert' select='EDUC_AID_AMT_IND' />
													</xsl:call-template>
												</EDUC_AID_AMT_IND>  
											</EDUCATION_EID>
										</xsl:for-each>
									</EDUCATION_EIDS>
								</EDUCATION_AID_SEMESTER>
                            </xsl:for-each>
                        </EDUCATION_AID_SEMESTERS>	
                         <!-- MAGI CHANGES PCR 61703 -->   
						<xsl:variable name="irweDataExist">
							<xsl:choose>
			            	    <xsl:when test="string(INDIVIDUAL_PROFILE/IRWE_RESP) = 'Y' or string(DISABILITY/IRWE_SW) = 'Y'"><xsl:value-of select="'Y'" /></xsl:when>
			     		    	<xsl:otherwise><xsl:value-of select="'N'" /></xsl:otherwise> 
							</xsl:choose>			     		    	
						</xsl:variable>
						
                        <CD_EFF_BEG_MO>
		        	        <xsl:value-of select="LIV_CHG_EFF_DT"/>
                        </CD_EFF_BEG_MO>
                        <CD_INDV_SEQ_NUM>		        	       
		        	        <xsl:choose>
						          <xsl:when test="string(CDEMO_INDV_SEQ_NUM)"><xsl:value-of select="CDEMO_INDV_SEQ_NUM"/></xsl:when>
						          <xsl:otherwise>0</xsl:otherwise>
					     	</xsl:choose> 
                        </CD_INDV_SEQ_NUM>
                        <SE_INDV_SEQ_NUM>		        	      
		        	        <xsl:choose>
						          <xsl:when test="string(SE_INDV_SEQ_NUM)"><xsl:value-of select="SE_INDV_SEQ_NUM"/></xsl:when>
						          <xsl:otherwise>0</xsl:otherwise>
					     	</xsl:choose> 
                        </SE_INDV_SEQ_NUM>
                        <BR_INDV_SEQ_NUM>                        
                        	<xsl:choose>
						          <xsl:when test="string(INDIVIDUAL_PROFILE/BR_INDV_SEQ_NUM) and $IS_ADD_PRGM = 1"><xsl:value-of select="INDIVIDUAL_PROFILE/BR_INDV_SEQ_NUM"/></xsl:when>
						          <xsl:otherwise>0</xsl:otherwise>
					     	</xsl:choose> 
                        </BR_INDV_SEQ_NUM>
                        <!-- RMB CLA PCR 43100 -->
                        <CLA_INDV_SEQ_NUM>
                        	<xsl:choose>
						          <xsl:when test="string(CLA_INDV_SEQ_NUM)"><xsl:value-of select="CLA_INDV_SEQ_NUM"/></xsl:when>
						          <xsl:otherwise>0</xsl:otherwise>
					     	</xsl:choose> 
                        </CLA_INDV_SEQ_NUM>
                        
                        <RQST_IND>
                        	 <xsl:choose>
		            	        <xsl:when test="string(RQST_IND)"><xsl:value-of select="RQST_IND"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </RQST_IND>
                       
                        <HNA_CPLT_IND>
                        	 <xsl:value-of select="E"/>
                        </HNA_CPLT_IND>
                        
                        <RQST_TYP_CD>
                        	 <xsl:value-of select="'RN'"/>
                        </RQST_TYP_CD>
                        
                        <PREV_CERT_END_DT>
                         	<xsl:choose>
		            	        <xsl:when test="string(PREV_CERT_END_DT)"><xsl:value-of select="PREV_CERT_END_DT"/></xsl:when>
		        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>	          				
            			</PREV_CERT_END_DT>
                        
                        <EMPLOYMENTS DATA_EXIST="{EMPLOYMENTS/@DATA_EXIST}">
                            <xsl:for-each select="EMPLOYMENTS/EMPLOYMENT">
                                <EMPLOYMENT DATA_EXIST="{EMPLOYMENT/@DATA_EXIST}">
                                    <EMPL_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(EMPL_SEQ_NUM)"><xsl:value-of select="EMPL_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EMPL_SEQ_NUM>
                                    <ASSC_EMPL_SEQ_NUM>
					                    <xsl:choose>
						        	  		<xsl:when test="SRC_APP_IND = 'RN'">
										         <xsl:value-of select="'0'"/>
										    </xsl:when>
										    <xsl:when test="string(EMPL_SEQ_NUM)">
										    	<xsl:value-of select="EMPL_SEQ_NUM"/>
										    </xsl:when>
						                    <xsl:otherwise> 
						                    	<xsl:value-of select="'0'"/>
						                    </xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </ASSC_EMPL_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>                                                                     					     		    	  
					     		    	<xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	     <xsl:value-of select="CHG_EFF_DT"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
					     		    	</xsl:choose>   
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <EMPL_BEG_DT>
                                        <xsl:value-of select="EMPL_BEG_DT"/>
                                    </EMPL_BEG_DT>
                                    <EMPL_END_DT>
                                        <xsl:value-of select="EMPL_END_DT"/>
                                    </EMPL_END_DT>
                                     <EMPL_TYP>
                                       <xsl:choose>
						                    <xsl:when test="AMER_CORPS_IND='Y'">
						                        <xsl:value-of select="'M'"/>
						                    </xsl:when>						                   
						                    <xsl:otherwise> 
						                    	<xsl:value-of select="'R'"/>
						                    </xsl:otherwise>
										</xsl:choose>
                                    </EMPL_TYP>
                                    <ER_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_NAM' />
						                </xsl:call-template>             
                                    </ER_NAM>
                                    <INCM_DCON_RESP>
					                    <xsl:value-of select="' '"/>  
					                    <!-- JAVA - If EMPL_END_DT is not high date, populate 'Y' else spaces.-->                                      
                                    </INCM_DCON_RESP>
                                    <FST_PAYCK_DT>
                                        <xsl:value-of select="FST_PAYCK_DT"/>
                                    </FST_PAYCK_DT>
                                    <LAST_PAYCK_DT>
                                        <xsl:value-of select="LAST_PAYCK_DT"/>
                                    </LAST_PAYCK_DT>
                                    <ON_STRK_SW>
				            	    	<xsl:value-of select="' '"/>
                                    </ON_STRK_SW>
                                    <PAY_FREQ_CD>
					                    <xsl:choose>
						                    <xsl:when test="EMPL_TYP = 'I'"><xsl:value-of select="'M'"/></xsl:when>
						            	    <xsl:when test="string(PAY_FREQ_CD)"><xsl:value-of select="PAY_FREQ_CD"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </PAY_FREQ_CD>
                                    <STRK_BEG_DT>
                                        <xsl:value-of select="STRK_BEG_DT"/>
                                    </STRK_BEG_DT>
                                    <STRK_END_DT>
	                                    <xsl:value-of select="STRK_END_DT"/>
                                    </STRK_END_DT>
                                    <EMPL_BEG_DT>
                                        <xsl:value-of select="EMPL_BEG_DT"/>
                                    </EMPL_BEG_DT>
                                    <EMPL_END_DT>
                                        <xsl:value-of select="EMPL_END_DT"/>
                                    </EMPL_END_DT>
                                    <ER_ADR_TXT>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_L1_ADR' />
						                </xsl:call-template>             
                                    </ER_ADR_TXT>
                                    <ER_CITY_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_CITY_ADR' />
						                </xsl:call-template>             
                                    </ER_CITY_ADR>
                                    <ER_PHN_NUM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_PHN_NUM' />
						                </xsl:call-template>             
                                    </ER_PHN_NUM>
                                    <ER_STA_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_ST_ADR' />
						                </xsl:call-template>             
                                    </ER_STA_ADR>
                                    <ER_ZIP_ADR>
                                    	<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='ER_ZIP_ADR' />
						                </xsl:call-template>             
                                    </ER_ZIP_ADR>
                                    <POSN_TYP_IND>
							            <xsl:choose>
						                    <xsl:when test="POSN_TYP_IND='M'">
						                        <xsl:value-of select="'MA'"/>
						                    </xsl:when>
						                    <xsl:when test="POSN_TYP_IND='S'">
						                        <xsl:value-of select="'ST'"/>
						                    </xsl:when>
						                    <xsl:otherwise> 
						                    	<xsl:value-of select="'UN'"/>
						                    </xsl:otherwise>
					                    </xsl:choose>
                                    </POSN_TYP_IND>
                                 	<TEMP_JOB_IND>
							            <xsl:choose>
						                    <xsl:when test="TEMP_JOB_IND='Y'">
						                        <xsl:value-of select="'TE'"/>
						                    </xsl:when>
						                    <xsl:when test="TEMP_JOB_IND='N'">
						                        <xsl:value-of select="'PE'"/>
						                    </xsl:when>
						                    <xsl:when test="TEMP_JOB_IND='T'">
						                        <xsl:value-of select="'TE'"/>
						                    </xsl:when>
						                    <xsl:when test="TEMP_JOB_IND='P'">
						                        <xsl:value-of select="'PE'"/>
						                    </xsl:when>
						                    <xsl:otherwise> 
						                    	<xsl:value-of select="'UN'"/>
						                    </xsl:otherwise>
										</xsl:choose>
                                    </TEMP_JOB_IND>
                                     <LOSS_EMPL_GDCS_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='LOSS_EMPL_GDCS_CD' />
						                </xsl:call-template>             
                                    </LOSS_EMPL_GDCS_CD>
                                    <WAGES DATA_EXIST="{WAGES/@DATA_EXIST}">
                                        <xsl:for-each select="WAGES/WAGE">
                                            <WAGE DATA_EXIST="{WAGE/@DATA_EXIST}">
                                                <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(ADTL_PAY_SEQ_NUM)"><xsl:value-of select="ADTL_PAY_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <ADTL_PAY_IND><!-- THIS TAG IS USED INTERNALLY FOR CHECKING WAGE -->
													<xsl:choose>
									            	    <xsl:when test="string(ADTL_PAY_IND)"><xsl:value-of select="ADTL_PAY_IND"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                                                 
                                                </ADTL_PAY_IND>                                                
                                                <AVG_WORK_HRS_QTY>
								                    <xsl:choose>
									            	    <xsl:when test="string(ADTL_HRS_QTY)"><xsl:value-of select="ADTL_HRS_QTY"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </AVG_WORK_HRS_QTY>
                                                <AVG_WRK_HR_QTY_IND>
							                        <xsl:value-of select="'2'"/>
                                                </AVG_WRK_HR_QTY_IND>
                                                <EI_TOT_AMT>
										            <xsl:choose>
									                    <xsl:when test="ADTL_PAY_TYP = 'SAL'">
									                        <xsl:value-of select="ADTL_PAY_AMT "/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = 'I  '">
									                        <xsl:value-of select="ADTL_PAY_AMT "/>
									                    </xsl:when>
														<xsl:when test="ADTL_PAY_TYP = 'TIP'">
									                        <xsl:value-of select="ADTL_PAY_AMT "/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = 'COM'">
									                        <xsl:value-of select="ADTL_PAY_AMT "/>
									                    </xsl:when>									                    
									                    <xsl:when test="ADTL_PAY_TYP = ' '">
									                        <xsl:value-of select="ADTL_PAY_AMT "/>
									                    </xsl:when>
									                    <xsl:otherwise> 
									                    	<xsl:value-of select="'0.00'"/>
									                    </xsl:otherwise>
									                </xsl:choose>
                                                </EI_TOT_AMT>
                                                <EI_TOT_AMT_IND>
							                        <xsl:value-of select="'2'"/>
                                                </EI_TOT_AMT_IND>
                                                <EI_TYP>
                                                    <xsl:choose>
                                                    	<xsl:when test="DELETED_WAGE = 'Y'">
									                        <xsl:value-of select="' '"/>
									                    </xsl:when>									               
									                    <xsl:when test="ADTL_PAY_TYP = 'HOR'">
									                        <xsl:value-of select="'REG'"/>
									                    </xsl:when>
									                    <xsl:otherwise>
									                    	<xsl:value-of select="translate(ADTL_PAY_TYP,$lcletters,$ucletters)"/>
									                    </xsl:otherwise>
									                </xsl:choose>
                                                </EI_TYP>
                                                <HR_RT>
													 <xsl:choose>
									                    <xsl:when test="ADTL_PAY_TYP = 'SAL'">
									                        <xsl:value-of select="'0.00'"/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = 'I  '">
									                        <xsl:value-of select="'0.00'"/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = 'TIP'">
									                        <xsl:value-of select="'0.00'"/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = 'COM'">
									                        <xsl:value-of select="'0.00'"/>
									                    </xsl:when>
									                    <xsl:when test="ADTL_PAY_TYP = ' '">
									                        <xsl:value-of select="'0.00'"/>
									                    </xsl:when>
									                    <xsl:otherwise> 
									                    	<xsl:value-of select="ADTL_PAY_AMT"/>
									            	    </xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </HR_RT>
                                                <HR_RT_IND>
							                    	<xsl:value-of select="'2'"/>
                                                </HR_RT_IND>
                                            </WAGE>
                                        </xsl:for-each>
                                    </WAGES>
                                     <!-- MAGI CHANGES PCR 61703 -->   
                                    <PRETAXDEDUCTIONS DATA_EXIST="{PRETAXDEDUCTIONS/@DATA_EXIST}">
                                        <xsl:for-each select="PRETAXDEDUCTIONS/PRETAXDEDUCTION">
                                            <PRETAXDEDUCTION DATA_EXIST="{PRETAXDEDUCTION/@DATA_EXIST}">
                                                <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(ADTL_PAY_SEQ_NUM)"><xsl:value-of select="ADTL_PAY_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <DDCT_FREQ_CD>
                                                  <xsl:choose>
						                   		   <xsl:when test="ADTL_PAY_FREQ_IND='N'">
						                        		<xsl:value-of select="'AN'"/>
						                              </xsl:when>
						                           <xsl:when test="ADTL_PAY_FREQ_IND='T'">
						                            <xsl:value-of select="'BM'"/>
						                           </xsl:when>
						                   		   <xsl:when test="ADTL_PAY_FREQ_IND='B'">
						                        		<xsl:value-of select="'BW'"/>
						                              </xsl:when>
						                           <xsl:when test="ADTL_PAY_FREQ_IND='M'">
						                            <xsl:value-of select="'MO'"/>
						                           </xsl:when>
						                   		   <xsl:when test="ADTL_PAY_FREQ_IND='Q'">
						                        		<xsl:value-of select="'QT'"/>
						                              </xsl:when>
						                           <xsl:when test="ADTL_PAY_FREQ_IND='Y'">
						                            <xsl:value-of select="'SA'"/>
						                           </xsl:when>
						                   		   <xsl:when test="ADTL_PAY_FREQ_IND='S'">
						                        		<xsl:value-of select="'SM'"/>
						                              </xsl:when>
						                           <xsl:when test="ADTL_PAY_FREQ_IND='W'">
						                            <xsl:value-of select="'WE'"/>
						                           </xsl:when>						                           						                           						                           
						                           <xsl:otherwise> 
						                    	      <xsl:value-of select="'UN'"/>
						                           </xsl:otherwise>
										         </xsl:choose>	                                                   
                                                </DDCT_FREQ_CD>	
                                                <DDCT_AMT_IND>
                                                      <xsl:choose>
									                    <xsl:when test="ADTL_PAY_IND = '0'">
									                        <xsl:value-of select="'1'"/>
									                    </xsl:when>
														<xsl:when test="ADTL_PAY_IND = '2'">
									                        <xsl:value-of select="'1'"/>
									                    </xsl:when>
									                    <xsl:otherwise> 
									                    	<xsl:value-of select="'2'"/>
									                    </xsl:otherwise> 
									                  </xsl:choose>                                                      
                                                </DDCT_AMT_IND> 
                                               <DDCT_TYP_CD >
													<xsl:choose>
									            	    <xsl:when test="string(ADTL_PAY_TYP)"><xsl:value-of select="ADTL_PAY_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                                                 
                                                </DDCT_TYP_CD >                                                
                                                <DDCT_AMT>
										           <xsl:choose>														
									            	    <xsl:when test="string(ADTL_PAY_AMT) and DELETED_WAGE != 'Y'"><xsl:value-of select="ADTL_PAY_AMT"/></xsl:when>
									            	    <xsl:when test="string(ADTL_PAY_AMT) and DELETED_WAGE = 'Y'">
									            	    <xsl:call-template name='getNegative'>
							            	    			<xsl:with-param name='amount' select="ADTL_PAY_AMT" />
						            	    			</xsl:call-template>
									            	    </xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                                </DDCT_AMT>
                                             </PRETAXDEDUCTION>
                                        </xsl:for-each>
                                    </PRETAXDEDUCTIONS>
                                     <!-- MAGI CHANGES PCR 61703 -->   
                                </EMPLOYMENT>
                            </xsl:for-each>
                        </EMPLOYMENTS>
                        
                        
                        
                        <LIQUID_ASSETS DATA_EXIST="{LIQUID_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="LIQUID_ASSETS/LIQUID_ASSET">
                                <LIQUID_ASSET DATA_EXIST="{LIQUID_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>                                                                      
                                    <ACCT_NUM>
                                    	<xsl:value-of select="ACCT_NUM"/> 									            
                                    </ACCT_NUM>
                                     <BURY_DSGT_SW>									
						               <xsl:choose>
						            	    <xsl:when test="string(BURY_DSGT_SW)"><xsl:value-of select="BURY_DSGT_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>   						                             
                                    </BURY_DSGT_SW>
                                    <FNCL_INST_CITY_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_CITY_ADR' />
						                </xsl:call-template>             
                                    </FNCL_INST_CITY_ADR>
                                    <FNCL_INST_L1_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_L1_ADR' />
						                </xsl:call-template>             
                                    </FNCL_INST_L1_ADR>
                                     <FNCL_INST_L2_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_L2_ADR' />
						                </xsl:call-template>             
                                    </FNCL_INST_L2_ADR>
                                    <FNCL_INST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_NAM' />
						                </xsl:call-template>             
                                    </FNCL_INST_NAM>
                                    <FNCL_INST_STA_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_STA_ADR' />
						                </xsl:call-template>             
                                    </FNCL_INST_STA_ADR>
                                     <FNCL_INST_ZIP_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='FNCL_INST_ZIP_ADR' />
						                </xsl:call-template>             
                                    </FNCL_INST_ZIP_ADR>
                                    <JNT_OWN_RESP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='JNT_OWN_RESP' />
						                </xsl:call-template>             
                                    </JNT_OWN_RESP>
                                    <LQD_ASET_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(LQD_ASET_AMT)"><xsl:value-of select="LQD_ASET_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>             
                                    </LQD_ASET_AMT>
                                    <LQD_ASET_AMT_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='LQD_ASET_AMT_IND' />
						                </xsl:call-template>  																                             
                                    </LQD_ASET_AMT_IND>
                                    <LQD_ASET_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='LQD_ASET_TYP' />
						                </xsl:call-template>             
                                    </LQD_ASET_TYP>
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>						            	    
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>                                  
                                    <JOINT_OWNERS DATA_EXIST="{JOINT_OWNERS/@DATA_EXIST}">
                                        <xsl:for-each select="JOINT_OWNERS/JOINT_OWNER">
                                            <JOINT_OWNER DATA_EXIST="{JOINT_OWNER/@DATA_EXIST}">
                                                <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <JNT_INDV_SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(JNT_INDV_SEQ_NUM)"><xsl:value-of select="JNT_INDV_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </JNT_INDV_SEQ_NUM>                                               
                                                <ASET_TYP>													
						               				 <xsl:choose>
									            	    <xsl:when test="string(ASET_TYP)"><xsl:value-of select="ASET_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                 
                                    			</ASET_TYP>
                                    			<JNT_OWN_SEQ_NUM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_SEQ_NUM)"><xsl:value-of select="JNT_OWN_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</JNT_OWN_SEQ_NUM>
                                                <ASET_SUB_TYP>													
						               				  <xsl:choose>
									            	    <xsl:when test="string(ASET_SUB_TYP)"><xsl:value-of select="ASET_SUB_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</ASET_SUB_TYP>
                                    			<JNT_OWN_FST_NAM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_FST_NAM)"><xsl:value-of select="JNT_OWN_FST_NAM"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_FST_NAM>
                                    			<JNT_OWN_LAST_NAM >
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_LAST_NAM )"><xsl:value-of select="JNT_OWN_LAST_NAM "/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_LAST_NAM >
                                    			 <JNT_OWN_SFX_NAM>
								        			<xsl:value-of select="' '"/>
                                   				 </JNT_OWN_SFX_NAM>
                                    			 <JNT_OWN_MID_INIT>
													<xsl:choose>
							        	   				 <xsl:when test="string(JNT_OWN_MID_INIT)"><xsl:value-of select="translate(JNT_OWN_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
							        	   				 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							     					</xsl:choose>                        
                                   				 </JNT_OWN_MID_INIT>
                                    			<OTSD_IND>
                                    			 	<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                					<xsl:with-param name='toConvert' select='OTSD_IND' />
						                			</xsl:call-template>    													             
                                    			</OTSD_IND>                                               
                                            </JOINT_OWNER>
                                        </xsl:for-each>
                                    </JOINT_OWNERS>
                                </LIQUID_ASSET>
                            </xsl:for-each>
                        </LIQUID_ASSETS>
                        <VEHICLE_ASSETS DATA_EXIST="{VEHICLE_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="VEHICLE_ASSETS/VEHICLE_ASSET">
                                <VEHICLE_ASSET DATA_EXIST="{VEHICLE_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>                                   
                                    <LIC_PLATE_TXT>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='LIC_PLATE_TXT' />
						                </xsl:call-template>             
                                    </LIC_PLATE_TXT>
                                     <LIC_STA_CD>
                                     	<xsl:value-of select="LIC_STA_CD"/>           
                                    </LIC_STA_CD>
                                    <MV_FMV_AMT>
                                    	<xsl:choose>
						            	    <xsl:when test="string(MV_FMV_AMT)"><xsl:value-of select="MV_FMV_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>             
                                    </MV_FMV_AMT>
                                    <MV_FMV_AMT_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                			<xsl:with-param name='toConvert' select='MV_FMV_AMT_IND' />
						                </xsl:call-template>            
                                    </MV_FMV_AMT_IND>
                                     <MV_MAKE_TXT>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_MAKE_TXT' />
						                </xsl:call-template>             
                                    </MV_MAKE_TXT>
                                    <MV_MODL_TXT>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_MODL_TXT' />
						                </xsl:call-template>             
                                    </MV_MODL_TXT>
                                    <MV_OWE_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(MV_OWE_AMT)"><xsl:value-of select="MV_OWE_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>               
                                    </MV_OWE_AMT>
                                     <MV_OWE_AMT_IND>
                                     	<xsl:call-template name='convertAccessIndToCwwInd'>
						                			<xsl:with-param name='toConvert' select='MV_OWE_AMT_IND' />
						                </xsl:call-template>    										            
                                    </MV_OWE_AMT_IND>
                                    <JNT_OWN_RESP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='JNT_OWN_RESP' />
						                </xsl:call-template>             
                                    </JNT_OWN_RESP>
                                    <MV_RGST_RQR_SW>
                                    	<xsl:choose>
						            	    <xsl:when test="string(MV_RGST_RQR_SW)"><xsl:value-of select="MV_RGST_RQR_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose> 										            
                                    </MV_RGST_RQR_SW>
                                    <MV_YR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_YR' />
						                </xsl:call-template>             
                                    </MV_YR>
                                    <VEH_ASET_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='VEH_ASET_TYP' />
						                </xsl:call-template>             
                                    </VEH_ASET_TYP>
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                     <MV_USE_1_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_USE_1_CD' />
						                </xsl:call-template>             
                                    </MV_USE_1_CD>
                                     <MV_USE_2_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_USE_2_CD' />
						                </xsl:call-template>             
                                    </MV_USE_2_CD>
                                     <MV_USE_3_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MV_USE_3_CD' />
						                </xsl:call-template>             
                                    </MV_USE_3_CD>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>						            	    
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>                                  
                                    <JOINT_OWNERS DATA_EXIST="{JOINT_OWNERS/@DATA_EXIST}">
                                        <xsl:for-each select="JOINT_OWNERS/JOINT_OWNER">
                                            <JOINT_OWNER DATA_EXIST="{JOINT_OWNER/@DATA_EXIST}">
                                               <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <JNT_INDV_SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(JNT_INDV_SEQ_NUM)"><xsl:value-of select="JNT_INDV_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </JNT_INDV_SEQ_NUM>                                               
                                                <ASET_TYP>													
						               				 <xsl:choose>
									            	    <xsl:when test="string(ASET_TYP)"><xsl:value-of select="ASET_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                 
                                    			</ASET_TYP>
                                    			<JNT_OWN_SEQ_NUM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_SEQ_NUM)"><xsl:value-of select="JNT_OWN_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</JNT_OWN_SEQ_NUM>
                                                <ASET_SUB_TYP>													
						               				  <xsl:choose>
									            	    <xsl:when test="string(ASET_SUB_TYP)"><xsl:value-of select="ASET_SUB_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</ASET_SUB_TYP>
                                    			<JNT_OWN_FST_NAM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_FST_NAM)"><xsl:value-of select="JNT_OWN_FST_NAM"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_FST_NAM>
                                    			<JNT_OWN_LAST_NAM >
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_LAST_NAM )"><xsl:value-of select="JNT_OWN_LAST_NAM "/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_LAST_NAM >
                                    			 <JNT_OWN_SFX_NAM>
								        			<xsl:value-of select="' '"/>
                                   				 </JNT_OWN_SFX_NAM>
                                    			 <JNT_OWN_MID_INIT>
													<xsl:choose>
							        	   				 <xsl:when test="string(JNT_OWN_MID_INIT)"><xsl:value-of select="translate(JNT_OWN_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
							        	   				 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							     					</xsl:choose>                        
                                   				 </JNT_OWN_MID_INIT>
                                    			<OTSD_IND>
                                    			 	<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                					<xsl:with-param name='toConvert' select='OTSD_IND' />
						                			</xsl:call-template>    													             
                                    			</OTSD_IND>                                                           
                                            </JOINT_OWNER>
                                        </xsl:for-each>
                                    </JOINT_OWNERS>
                                </VEHICLE_ASSET>
                            </xsl:for-each>
                        </VEHICLE_ASSETS>
                        
                        <REAL_PROPERTY_ASSETS DATA_EXIST="{REAL_PROPERTY_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="REAL_PROPERTY_ASSETS/REAL_PROPERTY_ASSET">
                                <REAL_PROPERTY_ASSET DATA_EXIST="{REAL_PROPERTY_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>                                   
                                    <INTN_RET_SW>
                                    	<xsl:choose>
						            	    <xsl:when test="string(INTN_RET_SW)"><xsl:value-of select="INTN_RET_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose> 										            
                                    </INTN_RET_SW>
                                     <PROP_ADR_IND>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_ADR_IND' />
						                </xsl:call-template>             
                                    </PROP_ADR_IND>
                                    <PROP_CITY_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_CITY_ADR' />
						                </xsl:call-template>             
                                    </PROP_CITY_ADR>
                                    <PROP_FMV_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(PROP_FMV_AMT)"><xsl:value-of select="PROP_FMV_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>           
                                    </PROP_FMV_AMT>
                                     <PROP_FMV_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='PROP_FMV_AMT_IND' />
						                </xsl:call-template>            
                                    </PROP_FMV_AMT_IND>
                                    <PROP_L1_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_L1_ADR' />
						                </xsl:call-template>             
                                    </PROP_L1_ADR>
                                    <PROP_L2_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_L2_ADR' />
						                </xsl:call-template>             
                                    </PROP_L2_ADR>
                                     <PROP_OWE_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(PROP_OWE_AMT)"><xsl:value-of select="PROP_OWE_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>              
                                    </PROP_OWE_AMT>                                    
                                    <PROP_OWE_AMT_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='PROP_OWE_AMT_IND' />
						                </xsl:call-template>   										            
                                    </PROP_OWE_AMT_IND>
                                    <PROP_STA_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_STA_ADR' />
						                </xsl:call-template>             
                                    </PROP_STA_ADR>
                                    <PROP_ZIP_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PROP_ZIP_ADR' />
						                </xsl:call-template>             
                                    </PROP_ZIP_ADR>
                                     <REAL_PROP_ASET_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='REAL_PROP_ASET_TYP' />
						                </xsl:call-template>             
                                    </REAL_PROP_ASET_TYP>
                                     <RES_SW>
										<xsl:choose>
											<xsl:when test="string(SALE_AGR_SW)">
												<xsl:call-template name='convertToUppercase'>
													<xsl:with-param name='toConvert' select='RES_SW' />
												</xsl:call-template>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '" />
											</xsl:otherwise>
										</xsl:choose> 
                                    </RES_SW>
                                     <RLT_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='RLT_CD' />
						                </xsl:call-template>             
                                    </RLT_CD>
                                    <SALE_AGR_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(SALE_AGR_SW)"><xsl:value-of select="SALE_AGR_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </SALE_AGR_SW>
                                    <SPS_LIVE_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(SPS_LIVE_SW)"><xsl:value-of select="SPS_LIVE_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </SPS_LIVE_SW>
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                    <JNT_OWN_RESP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='JNT_OWN_RESP' />
						                </xsl:call-template>             
                                    </JNT_OWN_RESP>                                   
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>						            	    
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>                                 
                                    <JOINT_OWNERS DATA_EXIST="{JOINT_OWNERS/@DATA_EXIST}">
                                        <xsl:for-each select="JOINT_OWNERS/JOINT_OWNER">
                                            <JOINT_OWNER DATA_EXIST="{JOINT_OWNER/@DATA_EXIST}">
                                              <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <JNT_INDV_SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(JNT_INDV_SEQ_NUM)"><xsl:value-of select="JNT_INDV_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </JNT_INDV_SEQ_NUM>                                               
                                                <ASET_TYP>													
						               				 <xsl:choose>
									            	    <xsl:when test="string(ASET_TYP)"><xsl:value-of select="ASET_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                 
                                    			</ASET_TYP>
                                    			<JNT_OWN_SEQ_NUM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_SEQ_NUM)"><xsl:value-of select="JNT_OWN_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</JNT_OWN_SEQ_NUM>
                                                <ASET_SUB_TYP>													
						               				  <xsl:choose>
									            	    <xsl:when test="string(ASET_SUB_TYP)"><xsl:value-of select="ASET_SUB_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</ASET_SUB_TYP>
                                    			<JNT_OWN_FST_NAM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_FST_NAM)"><xsl:value-of select="JNT_OWN_FST_NAM"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_FST_NAM>
                                    			<JNT_OWN_LAST_NAM >
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_LAST_NAM )"><xsl:value-of select="JNT_OWN_LAST_NAM "/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_LAST_NAM >
                                    			 <JNT_OWN_SFX_NAM>
								        			<xsl:value-of select="' '"/>
                                   				 </JNT_OWN_SFX_NAM>
                                    			 <JNT_OWN_MID_INIT>
													<xsl:choose>
							        	   				 <xsl:when test="string(JNT_OWN_MID_INIT)"><xsl:value-of select="translate(JNT_OWN_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
							        	   				 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							     					</xsl:choose>                        
                                   				 </JNT_OWN_MID_INIT>
                                    			<OTSD_IND>
                                    			 	<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                					<xsl:with-param name='toConvert' select='OTSD_IND' />
						                			</xsl:call-template>    													             
                                    			</OTSD_IND>                                                        
                                            </JOINT_OWNER>
                                        </xsl:for-each>
                                    </JOINT_OWNERS>
                                </REAL_PROPERTY_ASSET>
                            </xsl:for-each>
                        </REAL_PROPERTY_ASSETS>
                        
						<PERSONAL_PROPERTY_ASSETS DATA_EXIST="{PERSONAL_PROPERTY_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="PERSONAL_PROPERTY_ASSETS/PERSONAL_PROPERTY_ASSET">
                                <PERSONAL_PROPERTY_ASSET DATA_EXIST="{PERSONAL_PROPERTY_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>                                   
                                    <PRSN_PROP_AMT>
										 <xsl:choose>
						            	    <xsl:when test="string(PRSN_PROP_AMT)"><xsl:value-of select="PRSN_PROP_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>              
                                    </PRSN_PROP_AMT>
                                     <PRSN_PROP_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='PRSN_PROP_AMT_IND' />
						                </xsl:call-template>             
                                    </PRSN_PROP_AMT_IND>
                                    <PRSN_PROP_ASET_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRSN_PROP_ASET_TYP' />
						                </xsl:call-template>             
                                    </PRSN_PROP_ASET_TYP>
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                    <JNT_OWN_RESP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='JNT_OWN_RESP' />
						                </xsl:call-template>             
                                    </JNT_OWN_RESP>                                   
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>						            	    
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>                                 
				                      <JOINT_OWNERS DATA_EXIST="{JOINT_OWNERS/@DATA_EXIST}">
					                        <xsl:for-each select="JOINT_OWNERS/JOINT_OWNER">
					                            <JOINT_OWNER DATA_EXIST="{JOINT_OWNER/@DATA_EXIST}">
					                               <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <JNT_INDV_SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(JNT_INDV_SEQ_NUM)"><xsl:value-of select="JNT_INDV_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </JNT_INDV_SEQ_NUM>                                               
                                                <ASET_TYP>													
						               				 <xsl:choose>
									            	    <xsl:when test="string(ASET_TYP)"><xsl:value-of select="ASET_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                 
                                    			</ASET_TYP>
                                    			<JNT_OWN_SEQ_NUM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_SEQ_NUM)"><xsl:value-of select="JNT_OWN_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</JNT_OWN_SEQ_NUM>
                                                <ASET_SUB_TYP>													
						               				  <xsl:choose>
									            	    <xsl:when test="string(ASET_SUB_TYP)"><xsl:value-of select="ASET_SUB_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</ASET_SUB_TYP>
                                    			<JNT_OWN_FST_NAM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_FST_NAM)"><xsl:value-of select="JNT_OWN_FST_NAM"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_FST_NAM>
                                    			<JNT_OWN_LAST_NAM >
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_LAST_NAM )"><xsl:value-of select="JNT_OWN_LAST_NAM "/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_LAST_NAM >
                                    			 <JNT_OWN_SFX_NAM>
								        			<xsl:value-of select="' '"/>
                                   				 </JNT_OWN_SFX_NAM>
                                    			 <JNT_OWN_MID_INIT>
													<xsl:choose>
							        	   				 <xsl:when test="string(JNT_OWN_MID_INIT)"><xsl:value-of select="translate(JNT_OWN_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
							        	   				 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							     					</xsl:choose>                        
                                   				 </JNT_OWN_MID_INIT>
                                    			<OTSD_IND>
                                    			 	<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                					<xsl:with-param name='toConvert' select='OTSD_IND' />
						                			</xsl:call-template>    													             
                                    			</OTSD_IND>                                                   
					                            </JOINT_OWNER>
					                        </xsl:for-each>
					                    </JOINT_OWNERS>                                    
                                </PERSONAL_PROPERTY_ASSET>
                            </xsl:for-each>
                        </PERSONAL_PROPERTY_ASSETS>
										                                                
                        <SELF_EMPLOYMENTS DATA_EXIST="{SELF_EMPLOYMENTS/@DATA_EXIST}">
                            <xsl:for-each select="SELF_EMPLOYMENTS/SELF_EMPLOYMENT">
                                <SELF_EMPLOYMENT DATA_EXIST="{SELF_EMPLOYMENT/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <AVG_INCM_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(AVG_INCM_AMT)"><xsl:value-of select="AVG_INCM_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </AVG_INCM_AMT>
                                    <AVG_INCM_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='AVG_INCM_IND' />
						                </xsl:call-template>
                                    </AVG_INCM_AMT_IND>
                                    <AVG_EXP_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(EXP_AMT)"><xsl:value-of select="EXP_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </AVG_EXP_AMT>
                                    <AVG_EXP_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='EXP_IND' />
						                </xsl:call-template>
                                    </AVG_EXP_AMT_IND>
                                    <DPRC_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(DPRC_AMT)"><xsl:value-of select="DPRC_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </DPRC_AMT>
                                    <DPRC_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='DPRC_IND' />
						                </xsl:call-template>
                                    </DPRC_AMT_IND>
                                    <CHG_EFF_DT>                                         
						        	    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	     <xsl:value-of select="CHG_EFF_DT"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
					     		    	</xsl:choose>                                    
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </CHG_EFF_DT>
                                    <HR_WORK_MO_QTY>
					                    <xsl:choose>
						            	    <xsl:when test="string(HR_WORK_MO_QTY)"><xsl:value-of select="HR_WORK_MO_QTY"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </HR_WORK_MO_QTY>
                                    <HR_WRK_MO_QTY_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='HR_WORK_MO_IND' />
						                </xsl:call-template>
                                    </HR_WRK_MO_QTY_IND>
                                    <SELF_EMPL_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='SELF_EMPL_TYP' />
						                </xsl:call-template>             
                                    </SELF_EMPL_TYP>
                                   <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                    <SELF_MNG_SW>
                                    	<xsl:choose>
						                    <xsl:when test="SELF_EMPL_TYP != 'RP'">
						                        <xsl:value-of select="'Y'"/>
						                    </xsl:when>
						                    <xsl:otherwise> 
						                    	<xsl:choose>
							                    	<xsl:when test="string(SELF_MNG_SW)"><xsl:value-of select="SELF_MNG_SW"/></xsl:when>
							        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
						        	        	</xsl:choose>
						            	    </xsl:otherwise>
					     		    	</xsl:choose>
                                    </SELF_MNG_SW>
                                    <!-- PCR# 43689 - Verification Check List changes for Self Employment - starts -->
                                    <BUS_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BUS_NAM' />
						                </xsl:call-template>              
                                    </BUS_NAM>
                                    <BUS_OWSP_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BUS_OWSP_TYP' />
						                </xsl:call-template>           
                                    </BUS_OWSP_TYP>
                                     <BUS_SGNF_CHG_MO>                                                      				
						    			<xsl:value-of select="BUS_SGNF_CHG_MO"/>                            
                      				</BUS_SGNF_CHG_MO>
                                    <BUS_STRT_MO>                                                      				
						    			<xsl:value-of select="BUS_STRT_MO"/>                 
                      				</BUS_STRT_MO>
                      				<BUS_TAX_FILE_YR>
                						<xsl:value-of select="BUS_TAX_FILE_YR"/>
            						</BUS_TAX_FILE_YR>
                                    <BUS_TAX_ID_NUM>
                						<xsl:value-of select="BUS_TAX_ID_NUM"/>
            						</BUS_TAX_ID_NUM>
            						  <!-- PCR# 43689 - Verification Check List changes for Self Employment - ends -->
                                </SELF_EMPLOYMENT>
                            </xsl:for-each>
                        </SELF_EMPLOYMENTS>
                        
                        <EDUC_CD>
                        	<xsl:value-of select="EDUC_CD"/>
                        </EDUC_CD>
                        <ENRL_STAT_CD>
                        	<xsl:value-of select="ENRL_STAT_CD"/>
                        </ENRL_STAT_CD>
                        <HS_GRAD_DT>
		                    <xsl:choose>
			            	    <xsl:when test="string(HS_GRAD_DT)"><xsl:value-of select="HS_GRAD_DT"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
		     		    	</xsl:choose>                        
                        </HS_GRAD_DT>
                        <HS_GRAD_STAT_CD>
                        	<xsl:value-of select="HS_GRAD_STAT_CD"/>
                        </HS_GRAD_STAT_CD>
                        <CARE_DEP_REQ_RSP>
                            <xsl:choose>
			                    <xsl:when test="CHLD_CARE_IND = '1'">
			                        <xsl:value-of select="'Y'"/>
			                    </xsl:when>
			                    <xsl:when test="ISFC_DY_CARE_IND = '1'">
			                        <xsl:value-of select="'Y'"/>
			                    </xsl:when>
			                    <xsl:otherwise>
			                    	<xsl:value-of select="' '"/>
			                    </xsl:otherwise>
			                </xsl:choose>
                        </CARE_DEP_REQ_RSP>
                        <STDT_FS_ELG_CD>
                            <xsl:choose>                            	
			                    <xsl:when test="SCHL_PLCM_IND = '1'">
			                        <xsl:value-of select="'FE'"/>
			                    </xsl:when>
			                    <xsl:when test="WORK_STDY_IND = '1'">
			                        <xsl:value-of select="'WS'"/>
			                    </xsl:when>
			                    <xsl:otherwise>
			                    	<xsl:value-of select="' '"/>
			                    </xsl:otherwise>
			                </xsl:choose>
                        </STDT_FS_ELG_CD>                                              
                       <SE_EFF_BEG_MO>                            
                           <xsl:call-template name='getYYYYMM'>
							           <xsl:with-param name='date' select="SCH_CHG_EFF_DT" />
						    </xsl:call-template>                            
                      </SE_EFF_BEG_MO>

						<DEPENDENT_CARES DATA_EXIST="{DEPENDENT_CARES/@DATA_EXIST}">
                            <xsl:for-each select="DEPENDENT_CARES/DEPENDENT_CARE">
                                <DEPENDENT_CARE DATA_EXIST="{DEPENDENT_CARE/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
								        <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
                                         <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose> 
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
									<DPND_CARE_EXP_AMT>
										<xsl:value-of select="DPND_CARE_EXP_AMT"/>
									</DPND_CARE_EXP_AMT>                                    
                                    <DPND_CARE_EXP_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='DPND_CARE_EXP_IND' />
						                </xsl:call-template>
                                    </DPND_CARE_EXP_IND>
									<DPND_EXP_PAID_AMT>
										<xsl:value-of select="DPND_EXP_PAID_AMT"/>
									</DPND_EXP_PAID_AMT>                                    
                                    <DPND_EXP_PAID_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='DPND_EXP_PAID_IND' />
						                </xsl:call-template>
                                    </DPND_EXP_PAID_IND>
                                    <PAID_IN_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(PAID_IN_SEQ_NUM)"><xsl:value-of select="PAID_IN_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </PAID_IN_SEQ_NUM>
                                    <PRVD_LAST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_LAST_NAM' />
						                </xsl:call-template>             
                                    </PRVD_LAST_NAM>
                                    <PRVD_FST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_FST_NAM' />
						                </xsl:call-template>             
                                    </PRVD_FST_NAM>
                                    <PRVD_ORG_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_ORG_NAM' />
						                </xsl:call-template>             
                                    </PRVD_ORG_NAM>
                                    <PRVD_IN_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(PRVD_IN_SEQ_NUM)"><xsl:value-of select="PRVD_IN_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </PRVD_IN_SEQ_NUM>
                                    <PRVD_TYP>
		                                <xsl:choose>
						                    <xsl:when test="PRVD_TYP = 'O'">
						                        <xsl:value-of select="'I'"/>
						                    </xsl:when>
						                    <xsl:when test="PRVD_TYP = 'A'">
						                        <xsl:value-of select="'O'"/>
						                    </xsl:when>
						                    <xsl:otherwise>
						                    	<xsl:value-of select="' '"/>
						                    </xsl:otherwise>
						                </xsl:choose>
                                    </PRVD_TYP>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </DEPENDENT_CARE>
                            </xsl:for-each>
                        </DEPENDENT_CARES>
						<MEDICARES DATA_EXIST="{MEDICARES/@DATA_EXIST}">
                            <xsl:for-each select="MEDICARES/MEDICARE">
                                <MEDICARE DATA_EXIST="{MEDICARE/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
								         <xsl:value-of select="'0'"/>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>                            
                                        <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>  
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
									<HLTH_INS_CARE_NUM>
										<xsl:value-of select="HLTH_INS_CARE_NUM"/>
									</HLTH_INS_CARE_NUM>                                    
                                    <HLTH_INS_CARE_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='HLTH_INS_CARE_IND' />
						                </xsl:call-template>
                                    </HLTH_INS_CARE_IND>
                                    <PARTA_BEG_DT>
                                    	<xsl:value-of select="PARTA_BEG_DT"/>
                                    </PARTA_BEG_DT>
                                    <PARTA_PREM_AMT>
                                    	<xsl:value-of select="PARTA_PREM_AMT"/>
                                    </PARTA_PREM_AMT>
                                    <PARTA_PREM_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='PARTA_PREM_IND' />
						                </xsl:call-template>
                                    </PARTA_PREM_IND>
                                    <PARTA_PREM_PAYR_CD>
		                                <xsl:choose>
						                    <xsl:when test="normalize-space(PARTA_PREM_PAYR_CD) = 'SLF'">
						                        <xsl:value-of select="'SELF'"/>
						                    </xsl:when>
						                    <xsl:otherwise>
						                    	<xsl:value-of select="normalize-space(PARTA_PREM_PAYR_CD)"/>
						                    </xsl:otherwise>
						                </xsl:choose>
                                    </PARTA_PREM_PAYR_CD>
                                    <PARTB_BEG_DT>
                                    	<xsl:value-of select="PARTB_BEG_DT"/>
                                    </PARTB_BEG_DT>
                                    <PARTB_PREM_AMT>
                                    	<xsl:value-of select="PARTB_PREM_AMT"/>
                                    </PARTB_PREM_AMT>
                                    <PARTB_PREM_IND>
                                    	<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='PARTB_PREM_IND' />
						                </xsl:call-template>
                                    </PARTB_PREM_IND>
                                    <PARTB_PREM_PAYR_CD>
		                                <xsl:choose>
						                    <xsl:when test="normalize-space(PARTB_PREM_PAYR_CD) = 'SLF'">
						                        <xsl:value-of select="'SELF'"/>
						                    </xsl:when>
						                    <xsl:when test="normalize-space(PARTB_PREM_PAYR_CD) = 'CVL'">
						                        <xsl:value-of select="'CIVIL'"/>
						                    </xsl:when>
						                    <xsl:when test="normalize-space(PARTB_PREM_PAYR_CD) = 'PTP'">
						                        <xsl:value-of select="'PRITP'"/>
						                    </xsl:when>
						                    <xsl:otherwise>
						                    	<xsl:value-of select="normalize-space(PARTB_PREM_PAYR_CD)"/>
						                    </xsl:otherwise>
						                </xsl:choose>
                                    </PARTB_PREM_PAYR_CD>
                                    <RETR_RESP>
		                                <xsl:choose>
						                    <xsl:when test="normalize-space(RETR_RESP) = 'N'">
						                        <xsl:value-of select="'N'"/>
						                    </xsl:when>
						                    <xsl:when test="normalize-space(RETR_RESP) = 'Y'">
						                        <xsl:value-of select="'Y'"/>
						                    </xsl:when>
						                    <xsl:otherwise>
						                    	<xsl:value-of select="' '"/>
						                    </xsl:otherwise>
						                </xsl:choose>						             
                                    </RETR_RESP>
                                    <PARTA_ETTL_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(PARTA_ETTL_RESP)"><xsl:value-of select="PARTA_ETTL_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </PARTA_ETTL_RESP>
                                    <PARTB_ETTL_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(PARTB_ETTL_RESP)"><xsl:value-of select="PARTB_ETTL_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </PARTB_ETTL_RESP>
                                </MEDICARE>
                            </xsl:for-each>
                        </MEDICARES>

                        <UNEARNED_INCOMES DATA_EXIST="{UNEARNED_INCOMES/@DATA_EXIST}">
                            <xsl:for-each select="UNEARNED_INCOMES/UNEARNED_INCOME">
                                <UNEARNED_INCOME DATA_EXIST="{UNEARNED_INCOME/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                        
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <FREQ_CD>
					                    <xsl:choose>
						            	    <xsl:when test="string(FREQ_CD)"><xsl:value-of select="FREQ_CD"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </FREQ_CD>
                                    <UEI_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(UEI_AMT)"><xsl:value-of select="UEI_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </UEI_AMT>
                                    <UEI_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='UEI_AMT_IND' />
						                </xsl:call-template>
                                    </UEI_AMT_IND>
                                    <UEI_BEG_DT>
                                        <xsl:value-of select="UEI_BEG_DT"/>
                                    </UEI_BEG_DT>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                    <UEI_STYP>
										<xsl:choose>
						                    <xsl:when test="UEI_TYP = 'CS'">
						                        <xsl:value-of select="'CC'"/>
						                    </xsl:when>
						                    <xsl:when test="UEI_TYP = 'SS' and string(SRC_APP_IND)='RN'">
						                        <xsl:value-of select="'DI'"/>
						                    </xsl:when>
					        	        	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </UEI_STYP>
                                     <UEI_TYP>
										<xsl:choose>                                    
						                    <xsl:when test="UEI_TYP = 'TP'">
						                        <xsl:value-of select="'TC'"/>
						                    </xsl:when>
											<xsl:otherwise>
												<xsl:call-template name='convertToUppercase'>
								                	<xsl:with-param name='toConvert' select='UEI_TYP' />
								                </xsl:call-template>
						                	</xsl:otherwise>             
					     		    	</xsl:choose>						                
                                    </UEI_TYP>
                                     <!-- MAGI CHANGES PCR 61703 -->   
                                     <MA_MA_TXBL_AMT> 
					                    <xsl:choose>
						            	    <xsl:when test="(UEI_TYP = 'PE' or UEI_TYP = 'AN')">
						            	    <xsl:value-of select="UEI_TXBL_AMT"/>
						            	    </xsl:when>						            	       						            	    						            	    
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </MA_MA_TXBL_AMT>
                                    <MA_TXBL_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='UEI_TXBL_AMT_IND' />
						                </xsl:call-template>
                                    </MA_TXBL_AMT_IND>   
                                     <PRSN_CPTL_LOSS_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(UEI_LOSS_AMT)">
						            	    <xsl:value-of select="UEI_LOSS_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>						            	    
					     		    	</xsl:choose>                                        
                                    </PRSN_CPTL_LOSS_AMT>
                                    <PRSN_CP_LS_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='UEI_LOSS_AMT_IND' />
						                </xsl:call-template>
                                    </PRSN_CP_LS_AMT_IND>
                                     <!-- MAGI CHANGES PCR 61703 -->   
                                </UNEARNED_INCOME>
                            </xsl:for-each>
                        </UNEARNED_INCOMES>
                        <APP_INDV_CNTCS DATA_EXIST="{APP_INDV_CNTCS/@DATA_EXIST}">
                            <xsl:for-each select="APP_INDV_CNTCS/APP_INDV_CNTC">
                                <APP_INDV_CNTC DATA_EXIST="{APP_INDV_CNTC/@DATA_EXIST}">
									 <EMAIL_ADR>
										<xsl:call-template name='convertToUppercase'>
											<xsl:with-param name='toConvert' select='EMAIL_ADR' />
										</xsl:call-template>             
									</EMAIL_ADR>
									<EMAIL_CSNT_IND>
										<xsl:choose>
											<xsl:when test="EMAIL_CSNT_IND = 'Y'">
													<xsl:value-of select="'Y'"/>
											</xsl:when>
											<xsl:when test="EMAIL_CSNT_IND = 'N'">
													<xsl:value-of select="'N'"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '"/>
											</xsl:otherwise>
										</xsl:choose>
									 </EMAIL_CSNT_IND>
									 <PAPRLESS_IND>
										<xsl:choose>
											<xsl:when test="PAPRLESS_IND = 'Y'">
													<xsl:value-of select="'Y'"/>
											</xsl:when>
											<xsl:when test="PAPRLESS_IND = 'N'">
													<xsl:value-of select="'N'"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '"/>
											</xsl:otherwise>
										</xsl:choose>
									 </PAPRLESS_IND>                                                                                  
                                </APP_INDV_CNTC>
                            </xsl:for-each>
                        </APP_INDV_CNTCS>
                         <!-- MAGI CHANGES PCR 61703 -->   
                        <TAX_DEDUCTIONS DATA_EXIST="{TAX_DEDUCTIONS/@DATA_EXIST}">
                            <xsl:for-each select="TAX_DEDUCTIONS/TAX_DEDUCTION">
                                <TAX_DEDUCTION DATA_EXIST="{TAX_DEDUCTION/@DATA_EXIST}">
                                    <SEQ_NUM>					                    				                    
										<xsl:value-of select="TAX_DDCT_SEQ_NUM"/>										
                                    </SEQ_NUM>
                                   <ASSC_SEQ_NUM>
                                       <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="TAX_DDCT_SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>   
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>   
                                    <ALOW_WRT_IN_EXP_CD>
										<xsl:value-of select="ALOW_WRT_E_TYP_CD"/>
                                    </ALOW_WRT_IN_EXP_CD>
                                    <DDCT_TYP_CD>
										<xsl:value-of select="TAX_DDCT_TYP_CD"/>
                                    </DDCT_TYP_CD>
                                    <EFF_BEG_MO>
			                      	    <xsl:call-template name='getYYYYMM'>
					            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
				            	    	</xsl:call-template>						            	                                                                                                                   
                                    </EFF_BEG_MO>  
									<EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>									
                                    <FREQ_PRD_CD>
                                        <xsl:choose>
				                   		   <xsl:when test="TAX_DDCT_FREQ_CD='N'">
				                        		<xsl:value-of select="'AN'"/>
				                            </xsl:when>
				                           <xsl:when test="TAX_DDCT_FREQ_CD='S'">
				                            <xsl:value-of select="'SM'"/>
				                           </xsl:when>
				                   		   <xsl:when test="TAX_DDCT_FREQ_CD='B'">
				                        		<xsl:value-of select="'BW'"/>
				                              </xsl:when>
				                           <xsl:when test="TAX_DDCT_FREQ_CD='M'">
				                            <xsl:value-of select="'MO'"/>
				                           </xsl:when>
				                   		   <xsl:when test="TAX_DDCT_FREQ_CD='Q'">
				                        		<xsl:value-of select="'QT'"/>
				                              </xsl:when>
				                           <xsl:when test="TAX_DDCT_FREQ_CD='Y'">
				                            <xsl:value-of select="'SA'"/>
				                           </xsl:when>
				                   		   <xsl:when test="TAX_DDCT_FREQ_CD='T'">
				                        		<xsl:value-of select="'BM'"/>
				                              </xsl:when>
				                           <xsl:when test="TAX_DDCT_FREQ_CD='W'">
				                            	<xsl:value-of select="'WE'"/>						                         
				                           </xsl:when>		                           
				                           <xsl:otherwise> 
				                    	      <xsl:value-of select="' '"/>
				                           </xsl:otherwise>
							         	</xsl:choose>
							         </FREQ_PRD_CD>
                                     <CL_YR_TOT_MAGI_AMT>
					                      <xsl:choose>
						                    <xsl:when test="TAX_DDCT_TYP_CD = 'MC' or TAX_DDCT_TYP_CD = 'PW'">
						                        <xsl:value-of select="TAX_DDCT_AMT"/>
						                    </xsl:when>						                    
					        	        	 <xsl:otherwise>0</xsl:otherwise>
					     		    	  </xsl:choose> 						                    
					        	     </CL_YR_TOT_MAGI_AMT> 
					        	    
                                    <ONG_PD_TT_MAGI_AMT>
                                     	<xsl:choose>
											<xsl:when test="TAX_DDCT_TYP_CD != 'MC' and TAX_DDCT_TYP_CD != 'PW'">
						                        <xsl:value-of select="TAX_DDCT_AMT"/>
						                    </xsl:when>
						                    <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </ONG_PD_TT_MAGI_AMT>    
                                     <CL_PRD_T_AMT_IND>
                                      <xsl:choose>
										<xsl:when test="TAX_DDCT_TYP_CD = 'MC' or TAX_DDCT_TYP_CD = 'PW'">
											<xsl:call-template name='convertAccessIndToCwwInd'>
												<xsl:with-param name='toConvert' select='TAX_DDCT_IND' />
											</xsl:call-template>
										 </xsl:when>
										 <xsl:otherwise>0</xsl:otherwise>
									  </xsl:choose>  			
                                    </CL_PRD_T_AMT_IND>  
                                    <ONG_PRD_T_AMT_IND>
                                     <xsl:choose>
										<xsl:when test="TAX_DDCT_TYP_CD != 'MC' and TAX_DDCT_TYP_CD != 'PW'">
											<xsl:call-template name='convertAccessIndToCwwInd'>
												<xsl:with-param name='toConvert' select='TAX_DDCT_IND' />
											</xsl:call-template>
										</xsl:when>
										<xsl:otherwise>0</xsl:otherwise>	
                                       </xsl:choose>  
                                    </ONG_PRD_T_AMT_IND> 
                                    <DDCT_SEL_CD>
					                   <xsl:choose>
						                    <xsl:when test="TAX_DDCT_TYP_CD = 'MC' or TAX_DDCT_TYP_CD = 'PW'">
						                        <xsl:value-of select="'CL'"/>
						                    </xsl:when>						                    
					        	        	 <xsl:otherwise> <xsl:value-of select="'OG'"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </DDCT_SEL_CD>                                    
                                    <CL_YR_INCUR_MO>
										<xsl:choose>
						                    <xsl:when test="TAX_DDCT_TYP_CD = 'MC' or TAX_DDCT_TYP_CD = 'PW'">
						                        <xsl:value-of select="TAX_DDCT_BEG_MO"/>  
						                    </xsl:when>						                    
					        	        	 <xsl:otherwise> <xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>
									</CL_YR_INCUR_MO>                                                                                                                                                                                                                                                                                   
                                </TAX_DEDUCTION>
                            </xsl:for-each>
                        </TAX_DEDUCTIONS>
                         <!-- MAGI CHANGES PCR 61703 -->   
                        <UTILITY_COSTS DATA_EXIST="{UTILITY_COSTS/@DATA_EXIST}">
                            <xsl:for-each select="UTILITY_COSTS/UTILITY_COST">
                                <UTILITY_COST DATA_EXIST="{UTILITY_COST/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                            
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <BILL_EXP_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(BILL_EXP_RESP)"><xsl:value-of select="BILL_EXP_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </BILL_EXP_RESP>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                       
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <HEAT_SW>
					                    <xsl:choose>
						            	   <xsl:when test="string(HEAT_SW)"><xsl:value-of select="HEAT_SW"/></xsl:when>
						        	       <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </HEAT_SW>
                                    <MO_OBLG_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(MO_OBLG_AMT)"><xsl:value-of select="MO_OBLG_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </MO_OBLG_AMT>
                                   <MO_OBLG_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='MO_OBLG_IND' />
						                </xsl:call-template>
                                    </MO_OBLG_AMT_IND>
                                    <UTIL_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='UTIL_TYP' />
						                </xsl:call-template>             
                                    </UTIL_TYP>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </UTILITY_COST>
                            </xsl:for-each>
                        </UTILITY_COSTS>
                        
                        <SHELTER_COSTS DATA_EXIST="{SHELTER_COSTS/@DATA_EXIST}">
                            <xsl:for-each select="SHELTER_COSTS/SHELTER_COST">
                                <SHELTER_COST DATA_EXIST="{SHELTER_COST/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                        
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <SHLT_OBLG_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(SHLT_OBLG_AMT)"><xsl:value-of select="SHLT_OBLG_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SHLT_OBLG_AMT>
                                    <SHLT_OBLG_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                	<xsl:with-param name='toConvert' select='SHLT_OBLG_IND' />
						                </xsl:call-template>
                                    </SHLT_OBLG_AMT_IND>
                                    <SHLT_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='SHLT_TYP' />
						                </xsl:call-template>             
                                    </SHLT_TYP>
                                    <UNK_CTRB_SW>
					                    <xsl:value-of select="' '"/>                                        
                                    </UNK_CTRB_SW>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </SHELTER_COST>
                            </xsl:for-each>
                        </SHELTER_COSTS>
                        
                        <BURIAL_ASSETS DATA_EXIST="{BURIAL_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="BURIAL_ASSETS/BURIAL_ASSET">
                                <BURIAL_ASSET DATA_EXIST="{BURIAL_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <BURY_ASET_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(BURY_ASET_AMT)"><xsl:value-of select="BURY_ASET_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </BURY_ASET_AMT>
                                    <BURY_ASET_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='BURY_ASET_AMT_IND' />
						                </xsl:call-template>               
                                    </BURY_ASET_AMT_IND>
                                    <BURY_ASET_RLT_CD>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BURY_ASET_RLT_CD' />
						                </xsl:call-template>             
                                    </BURY_ASET_RLT_CD>
                                    <BURY_ASET_TYP>
					                    <xsl:choose>
						            	    <xsl:when test="string(BURY_ASET_TYP)='CK' or string(BURY_ASET_TYP)='VT'">
							            	    <xsl:value-of select="'BS'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise>
		        				    	    	<xsl:call-template name='convertToUppercase'>
								                	<xsl:with-param name='toConvert' select='BURY_ASET_TYP' />
								                </xsl:call-template>             
						        	        </xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </BURY_ASET_TYP>
                                    <FOR_INDV_SEQ_NUM>
											<xsl:value-of select="FOR_INDV_SEQ_NUM"/>            
                                    </FOR_INDV_SEQ_NUM>
                                    <BA_CITY_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BA_CITY_ADR' />
						                </xsl:call-template>             
                                    </BA_CITY_ADR>
                                    <BA_LINE_1_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BA_LINE_1_ADR' />
						                </xsl:call-template>             
                                    </BA_LINE_1_ADR>
                                    <BA_LINE_2_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BA_LINE_2_ADR' />
						                </xsl:call-template>             
                                    </BA_LINE_2_ADR>
                                    <BUR_AST_ACCT_NUM>
										<xsl:value-of select="BUR_AST_ACCT_NUM"/>              
                                    </BUR_AST_ACCT_NUM>
                                    <BUR_AST_INST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='BUR_AST_INST_NAM' />
						                </xsl:call-template>             
                                    </BUR_AST_INST_NAM>
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </BURIAL_ASSET>
                            </xsl:for-each>
                        </BURIAL_ASSETS>
                        
                        <LIFE_INSURANCE_DETAILS DATA_EXIST="{LIFE_INSURANCE_ASSETS/@DATA_EXIST}">
                            <xsl:for-each select="LIFE_INSURANCE_ASSETS/LIFE_INSURANCE_ASSET">
                                <LIFE_INSURANCE DATA_EXIST="{LIFE_INSURANCE_ASSET/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <INS_CO_CITY_ADR>
					                    <xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_CITY_ADR' />
						                </xsl:call-template>                                         
                                    </INS_CO_CITY_ADR>
                                    <INS_CO_L1_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_L1_ADR' />
						                </xsl:call-template>             
                                    </INS_CO_L1_ADR>
                                    <INS_CO_L2_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_L2_ADR' />
						                </xsl:call-template>             
                                    </INS_CO_L2_ADR>
                                    <INS_CO_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_NAM' />
						                </xsl:call-template>             
                                    </INS_CO_NAM>
                                    <INS_CO_STA_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_STA_ADR' />
						                </xsl:call-template>             
                                    </INS_CO_STA_ADR>
                                    <INS_CO_ZIP_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='INS_CO_ZIP_ADR' />
						                </xsl:call-template>             
                                    </INS_CO_ZIP_ADR>
                                    <LIFE_INS_ASET_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='LIFE_INS_ASET_TYP' />
						                </xsl:call-template>             
                                    </LIFE_INS_ASET_TYP>
                                    <LIFE_INS_F_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='LIFE_INS_F_AMT_IND' />
						                </xsl:call-template>            
                                    </LIFE_INS_F_AMT_IND>
                                    <LIFE_INS_FACE_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(LIFE_INS_FACE_AMT)"><xsl:value-of select="LIFE_INS_FACE_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </LIFE_INS_FACE_AMT>
                                    <LIFE_INS_PLCY_NUM>
										<xsl:value-of select="LIFE_INS_PLCY_NUM"/>             
                                    </LIFE_INS_PLCY_NUM>
                                    <LIFE_INS_S_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='LIFE_INS_S_AMT_IND' />
						                </xsl:call-template>             
                                    </LIFE_INS_S_AMT_IND>
                                    <LIFE_INS_SURR_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(LIFE_INS_SURR_AMT)"><xsl:value-of select="LIFE_INS_SURR_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </LIFE_INS_SURR_AMT>  
                                    <ASET_AVL_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASET_AVL_SW)"><xsl:value-of select="ASET_AVL_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                                     
                                    </ASET_AVL_SW>
                                    <JNT_OWN_RESP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='JNT_OWN_RESP' />
						                </xsl:call-template>             
                                    </JNT_OWN_RESP>                                 
                                    <EFF_END_MO>
					                   <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                      
                                    </EFF_END_MO>
                                     <JOINT_OWNERS DATA_EXIST="{JOINT_OWNERS/@DATA_EXIST}">
                                        <xsl:for-each select="JOINT_OWNERS/JOINT_OWNER">
                                            <JOINT_OWNER DATA_EXIST="{JOINT_OWNER/@DATA_EXIST}">
                                               <SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                     
                                                </SEQ_NUM>
                                                <JNT_INDV_SEQ_NUM>
								                    <xsl:choose>
									            	    <xsl:when test="string(JNT_INDV_SEQ_NUM)"><xsl:value-of select="JNT_INDV_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>                                                    
                                                </JNT_INDV_SEQ_NUM>                                               
                                                <ASET_TYP>													
						               				 <xsl:choose>
									            	    <xsl:when test="string(ASET_TYP)"><xsl:value-of select="ASET_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>                 
                                    			</ASET_TYP>
                                    			<JNT_OWN_SEQ_NUM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_SEQ_NUM)"><xsl:value-of select="JNT_OWN_SEQ_NUM"/></xsl:when>
									        	        <xsl:otherwise>0</xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</JNT_OWN_SEQ_NUM>
                                                <ASET_SUB_TYP>													
						               				  <xsl:choose>
									            	    <xsl:when test="string(ASET_SUB_TYP)"><xsl:value-of select="ASET_SUB_TYP"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>             
                                    			</ASET_SUB_TYP>
                                    			<JNT_OWN_FST_NAM>
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_FST_NAM)"><xsl:value-of select="JNT_OWN_FST_NAM"/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_FST_NAM>
                                    			<JNT_OWN_LAST_NAM >
													<xsl:choose>
									            	    <xsl:when test="string(JNT_OWN_LAST_NAM )"><xsl:value-of select="JNT_OWN_LAST_NAM "/></xsl:when>
									        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
								     		    	</xsl:choose>            
                                    			</JNT_OWN_LAST_NAM >
                                    			 <JNT_OWN_SFX_NAM>
								        			<xsl:value-of select="' '"/>
                                   				 </JNT_OWN_SFX_NAM>
                                    			 <JNT_OWN_MID_INIT>
													<xsl:choose>
							        	   				 <xsl:when test="string(JNT_OWN_MID_INIT)"><xsl:value-of select="translate(JNT_OWN_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
							        	   				 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
							     					</xsl:choose>                        
                                   				 </JNT_OWN_MID_INIT>
                                    			<OTSD_IND>
                                    			 	<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                					<xsl:with-param name='toConvert' select='OTSD_IND' />
						                			</xsl:call-template>    													             
                                    			</OTSD_IND>                                                           
                                            </JOINT_OWNER>
                                        </xsl:for-each>
                                    </JOINT_OWNERS>
                                </LIFE_INSURANCE>
                            </xsl:for-each>
                        </LIFE_INSURANCE_DETAILS>
                        
                        <ROOM_AND_BOARD_EARNINGS DATA_EXIST="{ROOM_AND_BOARD_EARNINGS/@DATA_EXIST}">
                            <xsl:for-each select="ROOM_AND_BOARD_EARNINGS/ROOM_AND_BOARD_EARNING">
                                <ROOM_AND_BOARD_EARNING DATA_EXIST="{ROOM_AND_BOARD_EARNING/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                       
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <BRD_INCM_AMT>
					                   <xsl:choose>
						            	    <xsl:when test="string(BRD_INCM_AMT)"><xsl:value-of select="BRD_INCM_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </BRD_INCM_AMT>
                                    <BRD_INCM_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='BRD_INCM_IND' />
						                </xsl:call-template>             
                                    </BRD_INCM_IND>
                                    <BRDER_IND>
										<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                	<xsl:with-param name='toConvert' select='BRDER_SW' />
						                </xsl:call-template>             
                                    </BRDER_IND>
                                    <PAID_FOR_QTY>
										<xsl:value-of select="PAID_FOR_QTY"/>             
                                    </PAID_FOR_QTY>
                                    <PAYR_INDV_SEQ_NUM>
					                   <xsl:choose>
						            	    <xsl:when test="string(PAYR_INDV_SEQ_NUM)"><xsl:value-of select="PAYR_INDV_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </PAYR_INDV_SEQ_NUM>
                                    <ROOM_INCM_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(ROOM_INCM_AMT)"><xsl:value-of select="ROOM_INCM_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </ROOM_INCM_AMT>
                                    <ROOM_INCM_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='ROOM_INCM_IND' />
						                </xsl:call-template>             
                                    </ROOM_INCM_IND>
                                    <ROOMER_IND>
										<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                	<xsl:with-param name='toConvert' select='ROOMER_SW' />
						                </xsl:call-template>             
                                    </ROOMER_IND>                                                                    
                                    <EFF_END_MO>
					                   <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </EFF_END_MO>
                                </ROOM_AND_BOARD_EARNING>
                            </xsl:for-each>
                        </ROOM_AND_BOARD_EARNINGS>
                        
                        <SUPPORT_PAYMENTS DATA_EXIST="{SUPPORT_PAYMENTS/@DATA_EXIST}">
                            <xsl:for-each select="SUPPORT_PAYMENTS/SUPPORT_PAYMENT">
                                <SUPPORT_PAYMENT DATA_EXIST="{SUPPORT_PAYMENT/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                        
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <SPRT_TYP_CD>					                    
						                <xsl:choose>
				            	   			 <xsl:when test="string(SPRT_TYP_CD)"><xsl:value-of select="SPRT_TYP_CD"/></xsl:when>
				        	       			 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    			</xsl:choose>                                          
                                    </SPRT_TYP_CD>
                                    <OBLG_AMT>
					                    <xsl:choose>
						            	    <xsl:when test="string(OBLG_AMT)"><xsl:value-of select="OBLG_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </OBLG_AMT>
                                    <OBLG_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='OBLG_IND' />
						                </xsl:call-template>            
                                    </OBLG_IND>
                                    <CRT_ORD_SW>								          
						                 <xsl:choose>
				            	   			 <xsl:when test="string(CRT_ORD_SW)"><xsl:value-of select="CRT_ORD_SW"/></xsl:when>
				        	       			 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    			</xsl:choose>  
                                    </CRT_ORD_SW>                                                                                                      
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </EFF_END_MO>
                                </SUPPORT_PAYMENT>
                            </xsl:for-each>
                        </SUPPORT_PAYMENTS>
                        
                        <IRWES DATA_EXIST="{IRWES/@DATA_EXIST}">
                            <xsl:for-each select="IRWES/IRWE">
                                <IRWE DATA_EXIST="{IRWE/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                         
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <EXP_TYP>
					                    <xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='EXP_TYP_CD' />
						                </xsl:call-template>                                         
                                    </EXP_TYP>
                                    <MO_EXP_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(MO_EXP_AMT)"><xsl:value-of select="MO_EXP_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>              
                                    </MO_EXP_AMT>
                                    <MO_EXP_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='MO_EXP_IND' />
						                </xsl:call-template>            
                                    </MO_EXP_IND>                                                                                                                                  
                                    <EFF_END_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </IRWE>
                            </xsl:for-each>
                        </IRWES>
                        
                        <MEDICAL_EXPENSES DATA_EXIST="{MEDICAL_EXPENSES/@DATA_EXIST}">
                            <xsl:for-each select="MEDICAL_EXPENSES/MEDICAL_EXPENSE">
                                <MEDICAL_EXPENSE DATA_EXIST="{MEDICAL_EXPENSE/@DATA_EXIST}">                               
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                         
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <MED_EXP_TYPE_CD>
					                    <xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='MED_EXP_TYP' />
						                </xsl:call-template>                                         
                                    </MED_EXP_TYPE_CD>
                                    <TOT_BILLING_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(TOT_BILL_AMT)"><xsl:value-of select="TOT_BILL_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </TOT_BILLING_AMT>
                                    <TOT_BILLING_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='TOT_BILL_IND' />
						                </xsl:call-template>           
                                    </TOT_BILLING_IND>
                                    <BILLED_FOR_INDV_SEQ_NUM>
	                                    <xsl:choose>
						            	    <xsl:when test="string(BILL_INDV_SEQ_NUM)"><xsl:value-of select="BILL_INDV_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </BILLED_FOR_INDV_SEQ_NUM>
                                    <PAYMENT_PLAN_FS_SW>
					                	<xsl:value-of select="'PYMT_PLAN_FS_SW'" />
                                    </PAYMENT_PLAN_FS_SW>
                                    <MO_FS_PLAN_NUM>
	                                    <xsl:choose>
						            	    <xsl:when test="string(MO_FS_PLAN_NUM)"><xsl:value-of select="MO_FS_PLAN_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </MO_FS_PLAN_NUM>
                                    <CARE_DT>
										<xsl:value-of select="CARE_DT"/>             
                                    </CARE_DT>                                                                                                                                  
                                    <EFF_END_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>
                                </MEDICAL_EXPENSE>
                            </xsl:for-each>
                        </MEDICAL_EXPENSES>
                        
                         <ROOM_AND_BOARD_PAIDS DATA_EXIST="{ROOM_AND_BOARD_PAIDS/@DATA_EXIST}">
                            <xsl:for-each select="ROOM_AND_BOARD_PAIDS/ROOM_AND_BOARD_PAID">
                                <ROOM_AND_BOARD_PAID DATA_EXIST="{ROOM_AND_BOARD_PAID/@DATA_EXIST}">
                                    <SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SEQ_NUM)"><xsl:value-of select="SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </SEQ_NUM>
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                      
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>
                                    <PAY_INDV_SEQ_NUM>
					                    <xsl:value-of select="P_TO_INDV_SEQ_NUM"/>                                          
                                    </PAY_INDV_SEQ_NUM>
                                    <ROOM_MEAL_DY_QTY>
										<xsl:value-of select="ROOM_MEAL_DY_QTY"/>            
                                    </ROOM_MEAL_DY_QTY>
                                    <BRD_IND>
										<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                		<xsl:with-param name='toConvert' select='BRDER_SW' />
						                </xsl:call-template>           
                                    </BRD_IND>
                                    <ROOMER_IND>
										<xsl:call-template name='convertAccessSwitchToCwwInd'>
						                		<xsl:with-param name='toConvert' select='ROOMER_SW' />
						                </xsl:call-template>           
                                    </ROOMER_IND> 
                                    <BRD_EXP_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(BRD_EXP_AMT)"><xsl:value-of select="BRD_EXP_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>            
                                    </BRD_EXP_AMT> 
                                    <BRD_EXP_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='BRD_EXP_IND' />
						                </xsl:call-template>            
                                    </BRD_EXP_IND> 
                                    <ROOM_EXP_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(ROOM_EXP_AMT)"><xsl:value-of select="ROOM_EXP_AMT"/></xsl:when>
						        	        <xsl:otherwise>0.00</xsl:otherwise>
					     		    	</xsl:choose>              
                                    </ROOM_EXP_AMT> 
                                    <ROOM_EXP_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='ROOM_EXP_IND' />
						                </xsl:call-template>           
                                    </ROOM_EXP_IND>                                                                                                     
                                    <EFF_END_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                       
                                    </EFF_END_MO>
                                     <ROOM_BOARD_INDVS DATA_EXIST="{ROOM_BOARD_INDVS/@DATA_EXIST}">
                                        <xsl:for-each select="ROOM_BOARD_INDVS/ROOM_BOARD_INDV">
                                            <ROOM_BOARD_INDV DATA_EXIST="{ROOM_BOARD_INDV/@DATA_EXIST}">
	                                               	<PAYR_INDV_SEQ_NUM>
														<xsl:value-of select="PAYR_INDV_SEQ_NUM"/>              
	                                   				</PAYR_INDV_SEQ_NUM> 
						                            <SEQ_NUM>
														<xsl:value-of select="SEQ_NUM"/> 
						                            </SEQ_NUM>
						                            <P_FOR_INDV_SEQ_NUM>
														<xsl:value-of select="P_FOR_INDV_SEQ_NUM"/> 
						                           </P_FOR_INDV_SEQ_NUM>
						                           <VALID_IND>
														 <xsl:choose>
				            	   							 <xsl:when test="string(IS_VALID)"><xsl:value-of select="IS_VALID"/></xsl:when>
				        	       						 	 <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    							</xsl:choose>
						                           </VALID_IND>					                       
				                     		 </ROOM_BOARD_INDV>                                                                                           
                                        </xsl:for-each>
                                    </ROOM_BOARD_INDVS>	                              
                                </ROOM_AND_BOARD_PAID>
                            </xsl:for-each>
                        </ROOM_AND_BOARD_PAIDS>
                                                                        
                        <PREGNANCY DATA_EXIST="{PREGNANCY/@DATA_EXIST}">
                            <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                            </ASSC_SEQ_NUM>
                            <ADD_REC_IND>
			                    <xsl:value-of select="'R'"/>
                            </ADD_REC_IND>
                            <EFF_BEG_MO>
                            	<xsl:choose>
						            <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            <xsl:call-template name='getYYYYMM'>
							            	  <xsl:with-param name='date' select="PREG_CHG_EFF_DT" />
						            	 </xsl:call-template>
						            	 </xsl:when>
						        	  <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						       	</xsl:choose>
                                <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                            </EFF_BEG_MO>
                            <FETUS_CT>
			                    <xsl:choose>
				            	    <xsl:when test="string(PREGNANCY/FETUS_CT)"><xsl:value-of select="PREGNANCY/FETUS_CT"/></xsl:when>
				        	        <xsl:otherwise>0</xsl:otherwise>
			     		    	</xsl:choose>                                
                            </FETUS_CT>
                            <FETUS_CT_IND>
								<xsl:call-template name='convertAccessIndToCwwInd'>
				                	<xsl:with-param name='toConvert' select='FETUS_CT_IND' />
				                </xsl:call-template>
                            </FETUS_CT_IND>
                            <PREG_DUE_DT>
                                <xsl:value-of select="PREGNANCY/PREG_DUE_DT"/>
                            </PREG_DUE_DT>
                            <PREG_END_DT>                                
                                  <xsl:value-of select="PREGNANCY/PREG_END_DT"/>
                            </PREG_END_DT>
                        </PREGNANCY>
                        
                         <DRUG_FELONS DATA_EXIST="{DRUG_FELONS/@DATA_EXIST}">
                            <xsl:for-each select="DRUG_FELONS/DRUG_FELON">
                                <DRUG_FELON DATA_EXIST="{DRUG_FELON/@DATA_EXIST}">                                
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <CVCT_DT>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND)">
						            	    	<xsl:value-of select="CVCT_DT" />
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="$defaultHighdate"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </CVCT_DT>
                                    <DRUG_TEST_RESP>
					                    <xsl:choose>
						            	    <xsl:when test="string(DRUG_TEST_RESP)"><xsl:value-of select="DRUG_TEST_RESP"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </DRUG_TEST_RESP>   
                                    <EFF_BEG_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RM'">							            	  
						            	    	<xsl:value-of select="EFF_BEG_MO" />
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            	    <xsl:value-of select="EFF_BEG_MO" />
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RN'">
							            	    <xsl:value-of select="EFF_BEG_MO" />
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                            
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>                                 
                                    <PGM_TYP>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PGM_TYP' />
						                </xsl:call-template>
                                    </PGM_TYP>                                 
                                    <EFF_END_MO>
					                   <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(SRC_APP_IND) and string(SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </EFF_END_MO>
                                </DRUG_FELON>
                            </xsl:for-each>
                        </DRUG_FELONS>
                   
                       <MAPP DATA_EXIST="{MAPP/@DATA_EXIST}">                                                                                                                               
                                    <ASSC_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) = 'RN'"><xsl:value-of select="'0'"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="SEQ_NUM"/></xsl:otherwise>
					     		    	</xsl:choose>
                                    </ASSC_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <EFF_BEG_MO>
					                    <xsl:choose>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) and string(MAPP/SRC_APP_IND)='RM'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="MAPP/EFF_BEG_MO" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) and string(MAPP/SRC_APP_IND)='CW'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="MAPP/EFF_BEG_MO" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) and string(MAPP/SRC_APP_IND)='RN'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="MAPP/EFF_BEG_MO" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise> 
						        	    </xsl:choose>                                       
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </EFF_BEG_MO>                                                              
                                    <WRK_RESP>                                    	 			     		    		
			     		    			 <xsl:choose>
			            	   				 <xsl:when test="MAPP/WORK_RESP = 'Y'">
			            	    				<xsl:value-of select="'Y'"/>
			            	   				</xsl:when>
			            	   				<xsl:when test="MAPP/WORK_RESP = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
			        				        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    				</xsl:choose>  									
                                    </WRK_RESP> 
                                    <HEC_PRGM_RESP>		
			     		    			<xsl:choose>
			            	   				 <xsl:when test="MAPP/HEC_PGM_RESP = 'Y'">
			            	    				<xsl:value-of select="'Y'"/>
			            	   				</xsl:when>
			            	   				<xsl:when test="MAPP/HEC_PGM_RESP = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
			        				        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    				</xsl:choose>   
                                    </HEC_PRGM_RESP>                                                           
                                    <WRK_EXMP_RESP>
										<xsl:choose>
			            	   				 <xsl:when test="MAPP/WORK_EXMP_RESP = 'Y'">
			            	    				<xsl:value-of select="'Y'"/>
			            	   				</xsl:when>
			            	   				<xsl:when test="MAPP/WORK_EXMP_RESP = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
			        				        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    				</xsl:choose>
                                    </WRK_EXMP_RESP>
                                    <MAPP_RQST_RESP>
										<xsl:choose>
			            	   				 <xsl:when test="MAPP/MAPP_RQST_RESP = 'Y'">
			            	    				<xsl:value-of select="'Y'"/>
			            	   				</xsl:when>
			            	   				<xsl:when test="MAPP/MAPP_RQST_RESP = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
			        				        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    				</xsl:choose>
                                    </MAPP_RQST_RESP>                                 
                                    <EFF_END_MO>
					                     <xsl:choose>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) and string(MAPP/SRC_APP_IND)='RE'">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="MAPP/CHG_EFF_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						            	    <xsl:when test="string(MAPP/SRC_APP_IND) and string(MAPP/SRC_APP_IND)='CW'">
							            			<xsl:value-of select="'0'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                    </EFF_END_MO>                           
                             </MAPP>
                        
                        <DISABILITY DATA_EXIST="{DISABILITY/@DATA_EXIST}">
                            <ADD_REC_IND>
			                    <xsl:value-of select="'R'"/>
			     		    </ADD_REC_IND>
                            <DABL_BEG_DT>
                            	<xsl:choose>
				            	    <xsl:when test="string(DISABILITY/DABL_DT)"><xsl:value-of select="DISABILITY/DABL_DT"/></xsl:when>
				        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
			     		    	</xsl:choose>                                   
                                <!-- JAVA - Default to High Date.-->
                            </DABL_BEG_DT>
                            <EFF_BEG_MO>                                
                                <xsl:value-of select="'999912'"/>                               
                            </EFF_BEG_MO>
                            <ESTB_BLND_RESP>                            			     		    
						        <xsl:choose>
				            	    <xsl:when test="string(DISABILITY/ESTB_BLND_RESP)"><xsl:value-of select="DISABILITY/ESTB_BLND_RESP"/></xsl:when>
				        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    	</xsl:choose>                                   
                            </ESTB_BLND_RESP>
                            <ESTB_DABL_SW>
						        <xsl:choose>
				            	    <xsl:when test="string(DISABILITY/ESTB_DABL_SW)"><xsl:value-of select="DISABILITY/ESTB_DABL_SW"/></xsl:when>
				        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    	</xsl:choose>                                   
                            </ESTB_DABL_SW>
                            <FS_DABL_SW>                      
						         <xsl:choose>
				            	    <xsl:when test="string(DISABILITY/FS_DABL_SW)"><xsl:value-of select="DISABILITY/FS_DABL_SW"/></xsl:when>
				        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    	</xsl:choose>                                  
                            </FS_DABL_SW>
                        </DISABILITY>                        
                        <NEWBORN DATA_EXIST="{NEWBORN/@DATA_EXIST}">
                            <ADD_REC_IND>
			                    <xsl:value-of select="'R'"/>
                            </ADD_REC_IND>
                            <EFF_BEG_MO>
                                <xsl:value-of select="' '"/>
                                <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                            </EFF_BEG_MO>
                            <LIVE_WITH_MOM_RESP>
			                    <xsl:choose>
				            	    <xsl:when test="string(NEWBORN/LIVE_WITH_MOM_RESP)"><xsl:value-of select="NEWBORN/LIVE_WITH_MOM_RESP"/></xsl:when>
				        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    	</xsl:choose>                                   
                            </LIVE_WITH_MOM_RESP>
                        </NEWBORN>

                        <YOUTH_EXITING_OUT_OF_HOME DATA_EXIST="{YEOHC_RESP/@DATA_EXIST}">
                            <ADD_REC_IND>
			                    <xsl:value-of select="'R'"/>
                            </ADD_REC_IND>
                            <EFF_BEG_MO>
                                <xsl:value-of select="''"/>
                                <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                            </EFF_BEG_MO>
                        </YOUTH_EXITING_OUT_OF_HOME>
                        
                        
                        <!-- PCR 68383 tax Filer & dependent  details -->
                        
                           <xsl:if test="$IS_ADD_PRGM=1">
								<TAXFILING_INFORMAION DATA_EXIST="{TAXFILING_INFORMAION/@DATA_EXIST}">
									<APP_NUM>
										<xsl:value-of select="TAXFILING_INFORMAION/APP_NUM" />
									</APP_NUM>
									<INDV_SEQ_NUM>
										<xsl:value-of select="TAXFILING_INFORMAION/INDV_SEQ_NUM" />
									</INDV_SEQ_NUM>
									<SPS_SEQ_NUM>
										<xsl:value-of select="TAXFILING_INFORMAION/SPS_SEQ_NUM" />
									</SPS_SEQ_NUM>
									<TAX_FILE_STAT_IND>
										<xsl:choose>
											<xsl:when test="TAXFILING_INFORMAION/FILE_CD = 'SIN'">
												<xsl:value-of select="'SI'" />
											</xsl:when>
											<xsl:when
												test="TAXFILING_INFORMAION/FILE_CD = 'JIH' or TAXFILING_INFORMAION/FILE_CD = 'JOH'">
												<xsl:value-of select="'MJ'" />
											</xsl:when>
											<xsl:when test="TAXFILING_INFORMAION/FILE_CD = 'SEP'">
												<xsl:value-of select="'MS'" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '" />
											</xsl:otherwise>
										</xsl:choose>
									</TAX_FILE_STAT_IND>
									<DPND_CLM_IND>
										<xsl:choose>
											<xsl:when test="string(TAXFILING_INFORMAION/CLMING_DPND_IND)">
												<xsl:value-of select="TAXFILING_INFORMAION/CLMING_DPND_IND" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '" />
											</xsl:otherwise>
										</xsl:choose>
									</DPND_CLM_IND>
									<IN_CL_TX_DP_OH_IND>
										<xsl:choose>
											<xsl:when test="string(TAXFILING_INFORMAION/OTSD_FILR_IND)">
												<xsl:value-of select="TAXFILING_INFORMAION/OTSD_FILR_IND" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="' '" />
											</xsl:otherwise>
										</xsl:choose>
									</IN_CL_TX_DP_OH_IND>
									<OTHR_SPS_IND>
										<xsl:value-of select="' '" />
									</OTHR_SPS_IND>
								</TAXFILING_INFORMAION>
								
								<!--Expected Income  -->
								<CHILDORDEPENDENT_INCOME DATA_EXIST="{CHILDORDEPENDENT_INCOME/@DATA_EXIST}">
									<CHL_DP_EI_RSP_IND>
										<xsl:value-of select="CHILDORDEPENDENT_INCOME/JOB_INCM_E_F_RESP" />
									</CHL_DP_EI_RSP_IND>
									<CHL_DP_UEI_RSP_IND>
										<xsl:value-of select="CHILDORDEPENDENT_INCOME/OTHR_INCM_E_RESP" />
									</CHL_DP_UEI_RSP_IND>
									<CHL_DP_SEI_RSP_IND>
										<xsl:value-of select="CHILDORDEPENDENT_INCOME/SEI_EXPT_FILE_RESP" />
									</CHL_DP_SEI_RSP_IND>
								</CHILDORDEPENDENT_INCOME>    
								
								<!-- Dependent details -->
								<TAX_DEPENDENTS DATA_EXIST="{TAX_DEPENDENTS/@DATA_EXIST}">
									<xsl:for-each select="TAX_DEPENDENTS/TAX_DEPENDENT">
										<TAX_DEPENDENT DATA_EXIST="{TAX_DEPENDENT/@DATA_EXIST}">
											<APP_NUM>
												<xsl:value-of select="APP_NUM" />
											</APP_NUM>
											<INDV_SEQ_NUM>
												<xsl:value-of select="SRC_INDV_SEQ_NUM" />
											</INDV_SEQ_NUM>
											<DPND_SEQ_NUM>
												<xsl:value-of select="REF_INDV_SEQ_NUM" />
											</DPND_SEQ_NUM>
											<DPND_ONLY_YR_IND>
												<xsl:value-of select="' '" />
											</DPND_ONLY_YR_IND>
										</TAX_DEPENDENT>
									</xsl:for-each>
								</TAX_DEPENDENTS>
								
                           </xsl:if>
						<!-- end of PCR 68383 -->                                                                        
				    </INDIVIDUAL>
                </xsl:for-each>
            </INDIVIDUALS>

            <ABSENT_PARENTS DATA_EXIST="{ABSENT_PARENTS/@DATA_EXIST}">
                <xsl:for-each select="ABSENT_PARENTS/ABSENT_PARENT">
                    <ABSENT_PARENT DATA_EXIST="{ABSENT_PARENT/@DATA_EXIST}">
                        <AP_SEQ_NUM>
		                    <xsl:choose>
			            	    <xsl:when test="string(AP_SEQ_NUM)"><xsl:value-of select="AP_SEQ_NUM"/></xsl:when>
			        	        <xsl:otherwise>0</xsl:otherwise>
		     		    	</xsl:choose>
                        </AP_SEQ_NUM>
                        <ASSC_AP_SEQ_NUM>
                            <xsl:value-of select="'0'"/>
                        </ASSC_AP_SEQ_NUM>
                        <ADD_REC_IND>
		                    <xsl:value-of select="'R'"/>
                        </ADD_REC_IND>
                        <AP_ABSN_DT>
                            <xsl:value-of select="AP_ABSN_DT"/>
                        </AP_ABSN_DT>
                        <AP_ABSN_RSN_CD>
                            <xsl:value-of select="AP_ABSN_RSN_CD"/>
                        </AP_ABSN_RSN_CD>
                        <AP_BRTH_DT>
                            <xsl:value-of select="' '"/>
                            <!-- JAVA - Default to High Date.-->
                        </AP_BRTH_DT>
                        <AP_FST_NAM>
							<xsl:call-template name='convertToUppercase'>
			                	<xsl:with-param name='toConvert' select='AP_FST_NAM' />
			                </xsl:call-template>             
                        </AP_FST_NAM>
                        <AP_LAST_NAM>
							<xsl:call-template name='convertToUppercase'>
			                	<xsl:with-param name='toConvert' select='AP_LAST_NAM' />
			                </xsl:call-template>             
                        </AP_LAST_NAM>
                        <AP_MID_INIT>
							<xsl:choose>
				        	    <xsl:when test="string(AP_MID_INIT)"><xsl:value-of select="translate(AP_MID_INIT,$lcletters,$ucletters)"/></xsl:when>
				        	    <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
				     		</xsl:choose>                           
                        </AP_MID_INIT>
                        <AP_RLT_CD>
                            <xsl:value-of select="' '"/>
                        </AP_RLT_CD>
                        <AP_SEX_IND>
		                    <xsl:choose>
			            	    <xsl:when test="string(AP_SEX_IND)"><xsl:value-of select="AP_SEX_IND"/></xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>
                        </AP_SEX_IND>
                        <AP_SS_NUM>
                            <xsl:value-of select="'0'"/>
                        </AP_SS_NUM>
                        <CASE_GDCS_CLM_SW>
		                    <xsl:choose>
			            	    <xsl:when test="CASE_GDCS_CLM_SW = 'Y'">
			            	    	<xsl:value-of select="'Y'"/>
			            	    </xsl:when>
			            	    <xsl:when test="CASE_GDCS_CLM_SW = 'N'">
			            	    	<xsl:value-of select="'N'"/>
			            	    </xsl:when>
			        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
		     		    	</xsl:choose>                            
                        </CASE_GDCS_CLM_SW>
                        <LAST_CNTC_DT>
                            <xsl:value-of select="' '"/>
                            <!-- JAVA - Default to High Date.-->
                        </LAST_CNTC_DT>
                        <ABSENT_PARENT_CHILDREN DATA_EXIST="{ABSENT_PARENT_CHILDREN/@DATA_EXIST}">
                            <xsl:for-each select="ABSENT_PARENT_CHILDREN/ABSENT_PARENT_CHILD">
                                <ABSENT_PARENT_CHILD DATA_EXIST="{ABSENT_PARENT_CHILD/@DATA_EXIST}">
                                    <INDV_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(INDV_SEQ_NUM)"><xsl:value-of select="INDV_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </INDV_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>
                                    <PATER_ESTB_SW>
					                    <xsl:choose>
						            	    <xsl:when test="PATER_ESTB_SW = 'Y'">
						            	    	<xsl:value-of select="'Y'"/>
						            	    </xsl:when>
						            	    <xsl:when test="PATER_ESTB_SW = 'L'">
						            	    	<xsl:value-of select="'Y'"/>
						            	    </xsl:when>
						            	    <xsl:when test="PATER_ESTB_SW = 'M'">
						            	    	<xsl:value-of select="'M'"/>
						            	    </xsl:when>
						            	    <xsl:when test="PATER_ESTB_SW = 'N'">
						            	    	<xsl:value-of select="'N'"/>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
					     		    	</xsl:choose>                            
                                    </PATER_ESTB_SW>
                                </ABSENT_PARENT_CHILD>
                            </xsl:for-each>
                        </ABSENT_PARENT_CHILDREN>
                    </ABSENT_PARENT>
                </xsl:for-each>
            </ABSENT_PARENTS>
                        
            <MEDICAL_COVERAGES DATA_EXIST="{MEDICAL_COVERAGES/@DATA_EXIST}">
                            <xsl:for-each select="MEDICAL_COVERAGES/MEDICAL_COVERAGE">
                                <MEDICAL_COVERAGE DATA_EXIST="{MEDICAL_COVERAGE/@DATA_EXIST}">
                                    <PLCY_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(PLCY_SEQ_NUM)"><xsl:value-of select="PLCY_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </PLCY_SEQ_NUM>
                                    <ASSC_PLCY_SEQ_NUM>
					                    <xsl:choose>
						            	    <xsl:when test="string(ASSC_PLCY_SEQ_NUM)"><xsl:value-of select="ASSC_PLCY_SEQ_NUM"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </ASSC_PLCY_SEQ_NUM>
                                    <ADD_REC_IND>
					                    <xsl:value-of select="'R'"/>
                                    </ADD_REC_IND>                               
                                    <GRP_NUM>
					                    <xsl:value-of select="GRP_NUM"/>                                       
                                    </GRP_NUM>
                                    <INS_PLCY_NUM>
										 <xsl:value-of select="INS_PLCY_NUM"/>           
                                    </INS_PLCY_NUM>
                                    <MAJ_MED_SW>
					                    <xsl:choose>
						            	    <xsl:when test="string(MAJ_MED_SW)"><xsl:value-of select="MAJ_MED_SW"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     				    	</xsl:choose>
		                            </MAJ_MED_SW>
                                    <MO_PREM_AMT>
										<xsl:choose>
						            	    <xsl:when test="string(MO_PREM_AMT)"><xsl:value-of select="MO_PREM_AMT"/></xsl:when>
						        	        <xsl:otherwise>0</xsl:otherwise>
					     		    	</xsl:choose>             
                                    </MO_PREM_AMT> 
                                    <MO_PREM_AMT_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='MO_PREM_AMT_IND' />
						                </xsl:call-template>            
                                    </MO_PREM_AMT_IND> 
                                    <PLCY_HOLD_BRTH_DT>
					                    <xsl:choose>
						            	    <xsl:when test="string(SRC_APP_IND)">
							            	    <xsl:call-template name='getYYYYMM'>
							            	    	<xsl:with-param name='date' select="PLCY_HOLD_BRTH_DT" />
						            	    	</xsl:call-template>
						            	    </xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'999912'"/></xsl:otherwise>
					     		    	</xsl:choose>                                        
                                        <!-- JAVA - If RETRO_MA_RESP in T1002 is '0', populate the CCYYMM of APP_FILE_DT in T1002 else populate 999912.-->
                                    </PLCY_HOLD_BRTH_DT>
                                    <PLCY_HOLD_FST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PLCY_HOLD_FST_NAM' />
						                </xsl:call-template>             
                                    </PLCY_HOLD_FST_NAM> 
                                    <PLCY_HOLD_LAST_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PLCY_HOLD_LAST_NAM' />
						                </xsl:call-template>             
                                    </PLCY_HOLD_LAST_NAM>
                                    <PLCY_HOLD_MID_INIT>
                                    	<xsl:choose>
						            	    <xsl:when test="string(PLCY_HOLD_MID_INIT)">
				                        		<xsl:call-template name='convertToUppercase'>
										    	<xsl:with-param name='toConvert' select="translate(PLCY_HOLD_MID_INIT,$lcletters,$ucletters)" />
										    	</xsl:call-template>             
				    	        	    	</xsl:when>
				        	    	    	<xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
			     		    			</xsl:choose>
                                    </PLCY_HOLD_MID_INIT>
                                    <PLCY_HOLD_SEQ_NUM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PLCY_HOLD_SEQ_NUM' />
						                </xsl:call-template>             
                                    </PLCY_HOLD_SEQ_NUM>   
                                    <PREM_FREQ_IND>
					                    <xsl:choose>
						            	    <xsl:when test="string(PREM_FREQ_IND)"><xsl:value-of select="PREM_FREQ_IND"/></xsl:when>
						        	        <xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise>
					     		    	</xsl:choose>                                         
                                    </PREM_FREQ_IND> 
                                    <PRVD_CITY_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_CITY_ADR' />
						                </xsl:call-template>             
                                    </PRVD_CITY_ADR> 
                                     <PRVD_L1_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_L1_ADR' />
						                </xsl:call-template>             
                                    </PRVD_L1_ADR>                                                                                                     
                                    <PRVD_NAM>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_NAM' />
						                </xsl:call-template>             
                                    </PRVD_NAM> 
                                    <PRVD_STA_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_STA_ADR' />
						                </xsl:call-template>             
                                    </PRVD_STA_ADR> 
                                    <PRVD_ZIP_ADR>
										<xsl:call-template name='convertToUppercase'>
						                	<xsl:with-param name='toConvert' select='PRVD_ZIP_ADR' />
						                </xsl:call-template>             
                                    </PRVD_ZIP_ADR>
                                    <HLTH_CVRG_IND>
										<xsl:call-template name='convertAccessIndToCwwInd'>
						                		<xsl:with-param name='toConvert' select='HLTH_CVRG_IND' />
						                </xsl:call-template>             
                                    </HLTH_CVRG_IND>    


                                    
                            <ER_NAM>
								<xsl:value-of select="' '"/>                          
			     		    </ER_NAM>  
                            <ER_CITY_ADR>
								<xsl:value-of select="' '"/>
                            </ER_CITY_ADR>                            
                            <ER_L1_ADR>
								<xsl:value-of select="' '"/>
                            </ER_L1_ADR>                            
                            <ER_ST_ADR>
								<xsl:value-of select="' '"/>
                            </ER_ST_ADR>                            
                            <ER_ZIP_CD_ADR>
								<xsl:value-of select="' '"/>
                            </ER_ZIP_CD_ADR>                            
                            <ER_PHN_NUM>
								<xsl:value-of select="' '"/>
                            </ER_PHN_NUM>                            
                            <FEIN_NUM_ID>
                               <xsl:value-of select="'0'"/>
                            </FEIN_NUM_ID>                            
                            <HLTH_INS_TYP>
								<xsl:value-of select="' '"/>
                            </HLTH_INS_TYP>                            
                            <HLTH_PLCY_PLAN_NAM>
                                <xsl:value-of select="' '"/>
                            </HLTH_PLCY_PLAN_NAM>                            
                            <INS_TRU_CUR_JB_IND>
                                    <xsl:value-of select="' '"/>
                            </INS_TRU_CUR_JB_IND> 
                            <ST_EE_BNFT_IND>
                                 <xsl:value-of select="' '"/>
                            </ST_EE_BNFT_IND>                                                                       

                                                                  
                                     <MEDICAL_COVERAGE_CHILDREN DATA_EXIST="{COVERAGE_DATAS/@DATA_EXIST}">
                                        <xsl:for-each select="COVERAGE_DATAS/COVERAGE_DATA">
                                            <MEDICAL_COVERAGE_CHILD DATA_EXIST="{COVERAGE_DATA/@DATA_EXIST}">
	                                               	<PLCY_SEQ_NUM>
														<xsl:call-template name='convertToUppercase'>
							                				<xsl:with-param name='toConvert' select='PLCY_SEQ_NUM' />
							               				 </xsl:call-template>             
	                                   				</PLCY_SEQ_NUM> 
						                            <INDV_SEQ_NUM>
														<xsl:call-template name='convertToUppercase'>
										                	<xsl:with-param name='toConvert' select='INDV_SEQ_NUM' />
										                </xsl:call-template>
						                            </INDV_SEQ_NUM>
						                            <RLT_CD>
				                                     	<xsl:choose>
										            	    <xsl:when test="string(RLT_CD) and string(RLT_CD)= 'S'"><xsl:value-of select="2"/></xsl:when>
										            	    <xsl:when test="string(RLT_CD) and string(RLT_CD)= 'C'"><xsl:value-of select="3"/></xsl:when>
			   							            	    <xsl:when test="string(RLT_CD) and string(RLT_CD)= 'P'"><xsl:value-of select="4"/></xsl:when>
										            	    <xsl:when test="string(RLT_CD) and string(RLT_CD)= 'O'"><xsl:value-of select="5"/></xsl:when>
										        	        <xsl:otherwise><xsl:value-of select="RLT_CD"/></xsl:otherwise>
									                    </xsl:choose>
									                </RLT_CD>
			                                        <CVRG_BEG_DT>
									                    <xsl:choose>
										            	    <xsl:when test="string(CVRG_BEG_DT)"><xsl:value-of select="CVRG_BEG_DT"/></xsl:when>
										        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
									     		    	</xsl:choose>                                         
			                                        </CVRG_BEG_DT>
			                                        <CVRG_END_DT>
									                    <xsl:choose>
										            	    <xsl:when test="string(CVRG_END_DT)"><xsl:value-of select="CVRG_END_DT"/></xsl:when>
										        	        <xsl:otherwise><xsl:value-of select="'9999-12-31'"/></xsl:otherwise>
									     		    	</xsl:choose>                                         
			                                        </CVRG_END_DT>
			                                        <PAST_CVRG_GDCS_CD>
									                        <xsl:choose>
										            	        <xsl:when test="string(PAST_CVRG_GDCS_CD)"><xsl:value-of select="PAST_CVRG_GDCS_CD"/></xsl:when>
										        	            <xsl:otherwise><xsl:value-of select="' '"/></xsl:otherwise>
									     		           </xsl:choose>
			                                       </PAST_CVRG_GDCS_CD>
				                                   <ADD_REC_IND>
									                    <xsl:value-of select="'R'"/>
                                        		   </ADD_REC_IND>						                           					                       
				                     		 </MEDICAL_COVERAGE_CHILD>                                                                                           
                                        </xsl:for-each>
                                    </MEDICAL_COVERAGE_CHILDREN>	                              
                                </MEDICAL_COVERAGE>
                            </xsl:for-each>
                        </MEDICAL_COVERAGES>
                        
             <LTC_FOR_APPLICATION_INDICATOR>
				<xsl:value-of select="LTC_FOR_APPLICATION_INDICATOR/LTC_FOR_APPLICATION_INDICATOR" />
			</LTC_FOR_APPLICATION_INDICATOR>
        </APPLICATION>
    </xsl:template>
</xsl:stylesheet>